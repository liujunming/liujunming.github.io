<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L</title>
  
  <subtitle>make it simple, make it happen.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liujunming.github.io/"/>
  <updated>2021-06-25T09:25:24.516Z</updated>
  <id>http://liujunming.github.io/</id>
  
  <author>
    <name>liujunming</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dive into VBT</title>
    <link href="http://liujunming.github.io/2021/06/25/Deep-into-VBT/"/>
    <id>http://liujunming.github.io/2021/06/25/Deep-into-VBT/</id>
    <published>2021-06-25T04:51:56.000Z</published>
    <updated>2021-06-25T09:25:24.516Z</updated>
    
    <content type="html"><![CDATA[<p>本文将深入解析VBT中的相关内容。<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br></pre></td><td class="code"><pre><span class="line">$ intel_vbt_decode i915_vbt</span><br><span class="line">VBT header:</span><br><span class="line">        VBT signature:          &quot;$VBT SKYLAKE        &quot;</span><br><span class="line">        VBT version:            0x0064 (1.0)</span><br><span class="line">        VBT header size:        0x0030 (48)</span><br><span class="line">        VBT size:               0x1159 (4441)</span><br><span class="line">        VBT checksum:           0xd9</span><br><span class="line">        BDB offset:             0x00000030 (48)</span><br><span class="line"></span><br><span class="line">BDB header:</span><br><span class="line">        BDB signature:          &quot;BIOS_DATA_BLOCK &quot;</span><br><span class="line">        BDB version:            211</span><br><span class="line">        BDB header size:        0x0016 (22)</span><br><span class="line">        BDB size:               0x1128 (4392)</span><br><span class="line"></span><br><span class="line">BDB blocks present:</span><br><span class="line">          1   2   3   6   7   8   9  10  12  13  17  18  20  26  27  28</span><br><span class="line">         31  32  40  41  42  43  44  46 252 253 254</span><br><span class="line"></span><br><span class="line">BDB block 1 - General features block:</span><br><span class="line">        Panel fitting: text &amp; graphics</span><br><span class="line">        Flexaim: yes</span><br><span class="line">        Message: yes</span><br><span class="line">        Clear screen: 0</span><br><span class="line">        DVO color flip required: no</span><br><span class="line">        External VBT: no</span><br><span class="line">        Enable SSC: no</span><br><span class="line">        LFP on override: no</span><br><span class="line">        Disable SSC on clone: no</span><br><span class="line">        Underscan support for VGA timings: no</span><br><span class="line">        Dynamic CD clock: yes</span><br><span class="line">        Hotplug support in VBIOS: no</span><br><span class="line">        Disable smooth vision: no</span><br><span class="line">        Single DVI for CRT/DVI: no</span><br><span class="line">        Enable 180 degree rotation: no</span><br><span class="line">        Inverted FDI Rx polarity: no</span><br><span class="line">        Extended VBIOS mode: no</span><br><span class="line">        Copy iLFP DTD to SDVO LVDS DTD: no</span><br><span class="line">        Best fit panel timing algorithm: no</span><br><span class="line">        Ignore strap state: no</span><br><span class="line">        Legacy monitor detect: yes</span><br><span class="line">        Integrated CRT: no</span><br><span class="line">        Integrated TV: no</span><br><span class="line">        Integrated EFP: no</span><br><span class="line">        DP SSC enable: no</span><br><span class="line">        DP SSC dongle supported: no</span><br><span class="line"></span><br><span class="line">BDB block 2 - General definitions block:</span><br><span class="line">        CRT DDC GMBUS addr: 0x02</span><br><span class="line">        Use ACPI DPMS CRT power states: no</span><br><span class="line">        Skip CRT detect at boot: no</span><br><span class="line">        Use DPMS on AIM devices: yes</span><br><span class="line">        Boot display type: 0x0000</span><br><span class="line">        Child device size: 38</span><br><span class="line">        Child device count: 8</span><br><span class="line">        Child device info:</span><br><span class="line">                Device handle: 0x0008 (LFP 1 (eDP))</span><br><span class="line">                Device type: 0x1806 (unknown)</span><br><span class="line">                        Internal connector</span><br><span class="line">                        DisplayPort output</span><br><span class="line">                        Digital output</span><br><span class="line">                I2C speed: 0x00</span><br><span class="line">                DP onboard redriver: 0x00</span><br><span class="line">                DP ondock redriver: 0x00</span><br><span class="line">                HDMI level shifter value: 0x00</span><br><span class="line">                HDMI max data rate: 0x00</span><br><span class="line">                Offset to DTD buffer for edidless CHILD: 0x00</span><br><span class="line">                Edidless EFP: no</span><br><span class="line">                Compression enable: no</span><br><span class="line">                Compression method CPS: no</span><br><span class="line">                Dual pipe ganged eDP: no</span><br><span class="line">                Compression structure index: 0x00)</span><br><span class="line">                Slave DDI port: 0x00 (HDMI-A)</span><br><span class="line">                AIM offset: 0</span><br><span class="line">                DVO Port: 0x0a (DP-A)</span><br><span class="line">                AIM I2C pin: 0x00</span><br><span class="line">                AIM Slave address: 0x00</span><br><span class="line">                DDC pin: 0x03</span><br><span class="line">                EDID buffer ptr: 0x00</span><br><span class="line">                DVO config: 0x00</span><br><span class="line">                EFP routed through dock: no</span><br><span class="line">                Lane reversal: no</span><br><span class="line">                Onboard LSPCON: no</span><br><span class="line">                Iboost enable: no</span><br><span class="line">                HPD sense invert: no</span><br><span class="line">                HDMI compatible? no</span><br><span class="line">                DP compatible? no</span><br><span class="line">                TMDS compatible? no</span><br><span class="line">                Aux channel: 0x40</span><br><span class="line">                Dongle detect: 0x00</span><br><span class="line">                Pipe capabilities: 0x00</span><br><span class="line">                SDVO stall signal available: no</span><br><span class="line">                Hotplug connect status: 0x00</span><br><span class="line">                Integrated encoder instead of SDVO: yes</span><br><span class="line">                DVO wiring: 0x00</span><br><span class="line">                MIPI bridge type: 00 (unknown)</span><br><span class="line">                Device class extension: 0x00</span><br><span class="line">                DVO function: 0x00</span><br><span class="line">                DP USB type C support: no</span><br><span class="line">                2X DP GPIO index: 0x00</span><br><span class="line">                2X DP GPIO pin number: 0x00</span><br><span class="line">                IBoost level for HDMI: 0x02</span><br><span class="line">                IBoost level for DP/eDP: 0x00</span><br><span class="line">        Child device info:</span><br><span class="line">                Device handle: 0x0004 (EFP 1 (HDMI/DVI/DP))</span><br><span class="line">                Device type: 0x60d6 (DisplayPort/HDMI/DVI)</span><br><span class="line">                        Power management</span><br><span class="line">                        Hotplug signaling</span><br><span class="line">                        HDMI output</span><br><span class="line">                        Content protection</span><br><span class="line">                        High speed link</span><br><span class="line">                        TMDS/DVI signaling</span><br><span class="line">                        DisplayPort output</span><br><span class="line">                        Digital output</span><br><span class="line">                I2C speed: 0x00</span><br><span class="line">                DP onboard redriver: 0x10</span><br><span class="line">                DP ondock redriver: 0x10</span><br><span class="line">                HDMI level shifter value: 0x08</span><br><span class="line">                HDMI max data rate: 0x00</span><br><span class="line">                Offset to DTD buffer for edidless CHILD: 0x8ea</span><br><span class="line">                Edidless EFP: no</span><br><span class="line">                Compression enable: no</span><br><span class="line">                Compression method CPS: no</span><br><span class="line">                Dual pipe ganged eDP: no</span><br><span class="line">                Compression structure index: 0x00)</span><br><span class="line">                Slave DDI port: 0x00 (HDMI-A)</span><br><span class="line">                AIM offset: 0</span><br><span class="line">                DVO Port: 0x07 (DP-B)</span><br><span class="line">                AIM I2C pin: 0x00</span><br><span class="line">                AIM Slave address: 0x00</span><br><span class="line">                DDC pin: 0x05</span><br><span class="line">                EDID buffer ptr: 0x00</span><br><span class="line">                DVO config: 0x00</span><br><span class="line">                EFP routed through dock: no</span><br><span class="line">                Lane reversal: no</span><br><span class="line">                Onboard LSPCON: yes</span><br><span class="line">                Iboost enable: no</span><br><span class="line">                HPD sense invert: no</span><br><span class="line">                HDMI compatible? no</span><br><span class="line">                DP compatible? no</span><br><span class="line">                TMDS compatible? no</span><br><span class="line">                Aux channel: 0x10</span><br><span class="line">                Dongle detect: 0x01</span><br><span class="line">                Pipe capabilities: 0x00</span><br><span class="line">                SDVO stall signal available: no</span><br><span class="line">                Hotplug connect status: 0x00</span><br><span class="line">                Integrated encoder instead of SDVO: yes</span><br><span class="line">                DVO wiring: 0x01</span><br><span class="line">                MIPI bridge type: 00 (unknown)</span><br><span class="line">                Device class extension: 0x00</span><br><span class="line">                DVO function: 0x00</span><br><span class="line">                DP USB type C support: no</span><br><span class="line">                2X DP GPIO index: 0x00</span><br><span class="line">                2X DP GPIO pin number: 0x00</span><br><span class="line">                IBoost level for HDMI: 0x02</span><br><span class="line">                IBoost level for DP/eDP: 0x00</span><br><span class="line">        Child device info:</span><br><span class="line">                Device handle: 0x0040 (EFP 2 (HDMI/DVI/DP))</span><br><span class="line">                Device type: 0x60d6 (DisplayPort/HDMI/DVI)</span><br><span class="line">                        Power management</span><br><span class="line">                        Hotplug signaling</span><br><span class="line">                        HDMI output</span><br><span class="line">                        Content protection</span><br><span class="line">                        High speed link</span><br><span class="line">                        TMDS/DVI signaling</span><br><span class="line">                        DisplayPort output</span><br><span class="line">                        Digital output</span><br><span class="line">                I2C speed: 0x00</span><br><span class="line">                DP onboard redriver: 0x10</span><br><span class="line">                DP ondock redriver: 0x10</span><br><span class="line">                HDMI level shifter value: 0x08</span><br><span class="line">                HDMI max data rate: 0x00</span><br><span class="line">                Offset to DTD buffer for edidless CHILD: 0x8fc</span><br><span class="line">                Edidless EFP: no</span><br><span class="line">                Compression enable: no</span><br><span class="line">                Compression method CPS: no</span><br><span class="line">                Dual pipe ganged eDP: no</span><br><span class="line">                Compression structure index: 0x00)</span><br><span class="line">                Slave DDI port: 0x00 (HDMI-A)</span><br><span class="line">                AIM offset: 0</span><br><span class="line">                DVO Port: 0x08 (DP-C)</span><br><span class="line">                AIM I2C pin: 0x00</span><br><span class="line">                AIM Slave address: 0x00</span><br><span class="line">                DDC pin: 0x04</span><br><span class="line">                EDID buffer ptr: 0x00</span><br><span class="line">                DVO config: 0x00</span><br><span class="line">                EFP routed through dock: no</span><br><span class="line">                Lane reversal: no</span><br><span class="line">                Onboard LSPCON: yes</span><br><span class="line">                Iboost enable: no</span><br><span class="line">                HPD sense invert: no</span><br><span class="line">                HDMI compatible? no</span><br><span class="line">                DP compatible? no</span><br><span class="line">                TMDS compatible? no</span><br><span class="line">                Aux channel: 0x20</span><br><span class="line">                Dongle detect: 0x01</span><br><span class="line">                Pipe capabilities: 0x00</span><br><span class="line">                SDVO stall signal available: no</span><br><span class="line">                Hotplug connect status: 0x00</span><br><span class="line">                Integrated encoder instead of SDVO: yes</span><br><span class="line">                DVO wiring: 0x02</span><br><span class="line">                MIPI bridge type: 00 (unknown)</span><br><span class="line">                Device class extension: 0x00</span><br><span class="line">                DVO function: 0x00</span><br><span class="line">                DP USB type C support: no</span><br><span class="line">                2X DP GPIO index: 0x00</span><br><span class="line">                2X DP GPIO pin number: 0x00</span><br><span class="line">                IBoost level for HDMI: 0x02</span><br><span class="line">                IBoost level for DP/eDP: 0x00</span><br><span class="line">        Child device info:</span><br><span class="line">                Device handle: 0x0020 (EFP 3 (HDMI/DVI/DP))</span><br><span class="line">                Device type: 0x60d6 (DisplayPort/HDMI/DVI)</span><br><span class="line">                        Power management</span><br><span class="line">                        Hotplug signaling</span><br><span class="line">                        HDMI output</span><br><span class="line">                        Content protection</span><br><span class="line">                        High speed link</span><br><span class="line">                        TMDS/DVI signaling</span><br><span class="line">                        DisplayPort output</span><br><span class="line">                        Digital output</span><br><span class="line">                I2C speed: 0x00</span><br><span class="line">                DP onboard redriver: 0x10</span><br><span class="line">                DP ondock redriver: 0x10</span><br><span class="line">                HDMI level shifter value: 0x08</span><br><span class="line">                HDMI max data rate: 0x00</span><br><span class="line">                Offset to DTD buffer for edidless CHILD: 0x90e</span><br><span class="line">                Edidless EFP: no</span><br><span class="line">                Compression enable: no</span><br><span class="line">                Compression method CPS: no</span><br><span class="line">                Dual pipe ganged eDP: no</span><br><span class="line">                Compression structure index: 0x00)</span><br><span class="line">                Slave DDI port: 0x00 (HDMI-A)</span><br><span class="line">                AIM offset: 0</span><br><span class="line">                DVO Port: 0x09 (DP-D)</span><br><span class="line">                AIM I2C pin: 0x00</span><br><span class="line">                AIM Slave address: 0x00</span><br><span class="line">                DDC pin: 0x06</span><br><span class="line">                EDID buffer ptr: 0x00</span><br><span class="line">                DVO config: 0x00</span><br><span class="line">                EFP routed through dock: no</span><br><span class="line">                Lane reversal: no</span><br><span class="line">                Onboard LSPCON: no</span><br><span class="line">                Iboost enable: no</span><br><span class="line">                HPD sense invert: no</span><br><span class="line">                HDMI compatible? no</span><br><span class="line">                DP compatible? no</span><br><span class="line">                TMDS compatible? no</span><br><span class="line">                Aux channel: 0x30</span><br><span class="line">                Dongle detect: 0x01</span><br><span class="line">                Pipe capabilities: 0x00</span><br><span class="line">                SDVO stall signal available: no</span><br><span class="line">                Hotplug connect status: 0x00</span><br><span class="line">                Integrated encoder instead of SDVO: yes</span><br><span class="line">                DVO wiring: 0x03</span><br><span class="line">                MIPI bridge type: 00 (unknown)</span><br><span class="line">                Device class extension: 0x00</span><br><span class="line">                DVO function: 0x00</span><br><span class="line">                DP USB type C support: no</span><br><span class="line">                2X DP GPIO index: 0x00</span><br><span class="line">                2X DP GPIO pin number: 0x00</span><br><span class="line">                IBoost level for HDMI: 0x02</span><br><span class="line">                IBoost level for DP/eDP: 0x00</span><br><span class="line"></span><br><span class="line">BDB block 3 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 6 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 7 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 8 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 9 - PSR block:</span><br><span class="line">        Panel 14 *</span><br><span class="line">                Full link: no</span><br><span class="line">                Require AUX to wakeup: no</span><br><span class="line">                Lines to wait before link standby: 0</span><br><span class="line">                Idle frames to for PSR enable: 0</span><br><span class="line">                TP1 wakeup time: 200 usec (0x2)</span><br><span class="line">                TP2/TP3 wakeup time: 200 usec (0x2)</span><br><span class="line"></span><br><span class="line">BDB block 10 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 12 - Driver feature data block:</span><br><span class="line">        Boot Device Algorithm: os default</span><br><span class="line">        Block display switching when DVD active: yes</span><br><span class="line">        Allow display switching when in Full Screen DOS: no</span><br><span class="line">        Hot Plug DVO: yes</span><br><span class="line">        Dual View Zoom: no</span><br><span class="line">        Driver INT 15h hook: no</span><br><span class="line">        Enable Sprite in Clone Mode: yes</span><br><span class="line">        Use 00000110h ID for Primary LFP: no</span><br><span class="line">        Boot Mode X: 1024</span><br><span class="line">        Boot Mode Y: 768</span><br><span class="line">        Boot Mode Bpp: 8</span><br><span class="line">        Boot Mode Refresh: 60</span><br><span class="line">        Enable LFP as primary: no</span><br><span class="line">        Selective Mode Pruning: no</span><br><span class="line">        Dual-Frequency Graphics Technology: yes</span><br><span class="line">        Default Render Clock Frequency: high</span><br><span class="line">        NT 4.0 Dual Display Clone Support: no</span><br><span class="line">        Default Power Scheme user interface: CUI</span><br><span class="line">        Sprite Display Assignment when Overlay is Active in Clone Mode: secondary</span><br><span class="line">        Display Maintain Aspect Scaling via CUI: yes</span><br><span class="line">        Preserve Aspect Ratio: no</span><br><span class="line">        Enable SDVO device power down: no</span><br><span class="line">        CRT hotplug: yes</span><br><span class="line">        LVDS config: No LVDS</span><br><span class="line">        Define Display statically: no</span><br><span class="line">        Legacy CRT max X: 0</span><br><span class="line">        Legacy CRT max Y: 0</span><br><span class="line">        Legacy CRT max refresh: 85</span><br><span class="line"></span><br><span class="line">BDB block 13 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 17 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 18 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 20 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 26 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 27 - eDP block:</span><br><span class="line">        Panel 14 *</span><br><span class="line">                Power Sequence: T3 2000 T7 200 T9 2000 T10 500 T12 5000</span><br><span class="line">                Panel color depth: 18 bpp</span><br><span class="line">                eDP sDRRS MSA Delay: Lane 1</span><br><span class="line">                Fast link params:</span><br><span class="line">                        rate: 1.62G</span><br><span class="line">                        lanes: x2 mode</span><br><span class="line">                        pre-emphasis: none</span><br><span class="line">                        vswing: 0.4V</span><br><span class="line">                Stereo 3D feature: no</span><br><span class="line">                T3 optimization: yes</span><br><span class="line">                Vswing/preemphasis table selection: Low power (200 mV)</span><br><span class="line">                Fast link training: no</span><br><span class="line">                DPCD 600h write required: no</span><br><span class="line">                PWM delays:</span><br><span class="line">                        PWM on to backlight enable: 110</span><br><span class="line">                        Backlight disable to PWM off: 110</span><br><span class="line">                Full link params provided: no</span><br><span class="line">                Full link params:</span><br><span class="line">                        pre-emphasis: none</span><br><span class="line">                        vswing: 0.4V</span><br><span class="line"></span><br><span class="line">BDB block 28 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 31 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 32 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 40 - LVDS options block:</span><br><span class="line">        Panel type: 14</span><br><span class="line">        LVDS EDID available: yes</span><br><span class="line">        Pixel dither: yes</span><br><span class="line">        PFIT auto ratio: yes</span><br><span class="line">        PFIT enhanced graphics mode: no</span><br><span class="line">        PFIT enhanced text mode: no</span><br><span class="line">        PFIT mode: 3</span><br><span class="line"></span><br><span class="line">BDB block 41 - LVDS timing pointer data:</span><br><span class="line">        Number of entries: 3</span><br><span class="line"></span><br><span class="line">BDB block 42 - LVDS panel data block:</span><br><span class="line">  Number of entries: 19 (preferred block marked with &apos;*&apos;)</span><br><span class="line">*       panel type 14: 1920x1080 clock 148500000</span><br><span class="line">                info:</span><br><span class="line">                  LVDS: 0x00000300</span><br><span class="line">                  PP_ON_DELAYS: 0x025807d0</span><br><span class="line">                  PP_OFF_DELAYS: 0x01f407d0</span><br><span class="line">                  PP_DIVISOR: 0x00270f05</span><br><span class="line">                  PFIT: 0x38711880</span><br><span class="line">                timings: 1920 2008 2053 2200 1080 1083 1089 1125 148500.00 (good)</span><br><span class="line"></span><br><span class="line">BDB block 43 - Backlight info block:</span><br><span class="line">        Inverter type: 2</span><br><span class="line">             polarity: 0</span><br><span class="line">             PWM freq: 600</span><br><span class="line">        Minimum brightness: 0</span><br><span class="line"></span><br><span class="line">BDB block 44 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 46 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 252 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 253 - Unknown, no decoding available:</span><br><span class="line"></span><br><span class="line">BDB block 254 - Unknown, no decoding available:</span><br></pre></td></tr></table></figure><h3 id="LFP"><a href="#LFP" class="headerlink" title="LFP"></a>LFP</h3><p>Local Flat Panel, normally used on mobile platforms only</p><p><a href="https://01.org/sites/default/files/documentation/acpi_igd_opregion_spec_0.pdf" target="_blank" rel="noopener">https://01.org/sites/default/files/documentation/acpi_igd_opregion_spec_0.pdf</a></p><h3 id="EFP"><a href="#EFP" class="headerlink" title="EFP"></a>EFP</h3><p>External Flat Panel</p><p><img src="/images/2021/06/9.PNG" alt></p><p><a href="https://01.org/sites/default/files/documentation/acpi_igd_opregion_spec_0.pdf" target="_blank" rel="noopener">https://01.org/sites/default/files/documentation/acpi_igd_opregion_spec_0.pdf</a></p><h3 id="Child-device"><a href="#Child-device" class="headerlink" title="Child device"></a>Child device</h3><p>A child device is a combination of one or more displays.</p><h3 id="eDP"><a href="#eDP" class="headerlink" title="eDP"></a>eDP</h3><p><img src="/images/2021/06/10.PNG" alt></p><p>eDP is an internal interface designed to connect the PC motherboard to the embedded display in a mobile PC.</p><p><a href="https://www.prnewswire.com/news-releases/displayport-dp-edp-and-idp-set-to-change-display-and-pc-landscapes-115091459.html" target="_blank" rel="noopener">DisplayPort: DP, eDP, and iDP Set to Change Display and PC Landscapes</a></p><h3 id="LVDS"><a href="#LVDS" class="headerlink" title="LVDS"></a>LVDS</h3><p><img src="/images/2021/06/11.PNG" alt></p><p>Many LVDS panels don’t bother to include an EDID rom, or the vendor didn’t bother to hook up the DDC wire; presumably it’s cheaper for them to stick more data in the VBIOS than add hardware.  However, there are some LVDS panels with EDID roms which contain <em>incorrect</em> mode data for the panel (amazing, I know), and so the driver prefers to use the VBT data when both are present.</p><p><a href="https://lore.kernel.org/patchwork/patch/268835/" target="_blank" rel="noopener">https://lore.kernel.org/patchwork/patch/268835/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将深入解析VBT中的相关内容。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Notes about DisplayPort</title>
    <link href="http://liujunming.github.io/2021/06/25/Notes-about-DisplayPort/"/>
    <id>http://liujunming.github.io/2021/06/25/Notes-about-DisplayPort/</id>
    <published>2021-06-25T03:26:51.000Z</published>
    <updated>2021-06-25T09:58:01.214Z</updated>
    
    <content type="html"><![CDATA[<p>本文将记录DisplayPort的相关notes。<a id="more"></a></p><h3 id="DPCD"><a href="#DPCD" class="headerlink" title="DPCD"></a>DPCD</h3><p>DPCD(DisplayPort Configuration Data): a virtual memory with addresses 0x00000 - 0xFFFFF.</p><p>The message transfer between DP source and sink occur by reads and writes to the DisplayPort Configuration Data (DPCD) register of the sink device.</p><p>By reading certain registers in the DPCD, the source will be aware of the capabilities of the sink. During the process of establishing the data links, the Link Training, source writes to DPCD to indicate the target link configuration and sink in turn writes the result of each link training stage.</p><p><a href="http://www.dssrl.com/unigraf/eng/Pdf/DisplayPortUse.pdf" target="_blank" rel="noopener">All you need to know about DisplayPort</a><br><a href="https://www.unigraf.fi/resource/what-do-you-need-to-test-in-displayport-interface/" target="_blank" rel="noopener">What do you need to test in DisplayPort interface?</a><br><a href="https://glenwing.github.io/docs/DP-1.2.pdf" target="_blank" rel="noopener">spec:VESA DisplayPort Standard Version 1.2</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将记录DisplayPort的相关notes。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Notes about Display</title>
    <link href="http://liujunming.github.io/2021/06/25/Notes-about-Display/"/>
    <id>http://liujunming.github.io/2021/06/25/Notes-about-Display/</id>
    <published>2021-06-25T03:10:46.000Z</published>
    <updated>2021-06-25T09:25:24.517Z</updated>
    
    <content type="html"><![CDATA[<p>本文将记录GPU display的相关notes。<a id="more"></a></p><h3 id="Ls-Pcon"><a href="#Ls-Pcon" class="headerlink" title="Ls-Pcon"></a>Ls-Pcon</h3><p>LSPCON(Level Shifter/Protocol Converter)是一个convertor，intel 的HDMI 2.0 solution 是通过DP to HDMI 2.0 转的，中间就是LSPCON。<br><img src="/images/2021/06/8.png" alt></p><p><a href="https://zhidao.baidu.com/question/1865983457773662747.html" target="_blank" rel="noopener">LSPCon是由谁来控制？</a><br><a href="https://www.intel.com/content/dam/support/us/en/documents/graphics/HDR_Intel_Graphics_TechWhitePaper.pdf" target="_blank" rel="noopener">HDR Intel Graphics TechWhitePaper</a></p><h3 id="DDC"><a href="#DDC" class="headerlink" title="DDC"></a>DDC</h3><p>The Display Data Channel, or DDC, is a collection of protocols for digital communication between a computer display and a graphics adapter.</p><p><a href="https://en.wikipedia.org/wiki/Display_Data_Channel" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Display_Data_Channel</a></p><p>DDC (Display Data Channel) is a defined Standard by VESA. While DDC is just the description of the interface, the true data that is exchanged between graphic adapter card and monitor is called EDID (Extended Display Information Data).</p><p><a href="https://www.blackbox.be/ben-be/page/25829/Resources/Technical-Resources/Black-Box-Explains/multimedia/ddc-display-data-channel" target="_blank" rel="noopener">https://www.blackbox.be/ben-be/page/25829/Resources/Technical-Resources/Black-Box-Explains/multimedia/ddc-display-data-channel</a></p><h3 id="DDI"><a href="#DDI" class="headerlink" title="DDI"></a>DDI</h3><p>Digital Display Interface</p><p>The DDIs contain the DisplayPort transport control and other port logic to interface to the DDI physical pins.</p><p><img src="/images/2021/06/12.PNG" alt></p><p><a href="https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-bxt-vol07-display.pdf" target="_blank" rel="noopener">https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-bxt-vol07-display.pdf</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将记录GPU display的相关notes。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Notes about AUX</title>
    <link href="http://liujunming.github.io/2021/06/24/Notes-about-AUX/"/>
    <id>http://liujunming.github.io/2021/06/24/Notes-about-AUX/</id>
    <published>2021-06-24T03:13:04.000Z</published>
    <updated>2021-06-24T12:07:39.820Z</updated>
    
    <content type="html"><![CDATA[<p>本文将记录AUX的相关notes。<a id="more"></a></p><p><img src="/images/2021/06/5.PNG" alt></p><p><img src="/images/2021/06/6.PNG" alt></p><p><img src="/images/2021/06/7.PNG" alt></p><p>For the handshake between the source and the sink, DP has a dedicated bus, the AUX Channel. Since the source device controls the process, it makes requests for the sink. </p><hr><p>参考资料:</p><ol><li><a href="https://tmetrix.com/wp-content/uploads/How-to-monitor-AUX-Channel-Communication-of-Displayport-interfaces.pdf" target="_blank" rel="noopener">How to Monitor AUX Channel Communication of DisplayPort Interfaces</a></li><li><a href="https://www.unigraf.fi/resource/what-do-you-need-to-test-in-displayport-interface/" target="_blank" rel="noopener">What do you need to test in DisplayPort interface?</a></li><li><a href="http://www.dssrl.com/unigraf/eng/Pdf/DisplayPortUse.pdf" target="_blank" rel="noopener">DisplayPortUse</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将记录AUX的相关notes。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Notes about EDID</title>
    <link href="http://liujunming.github.io/2021/06/24/Notes-about-EDID/"/>
    <id>http://liujunming.github.io/2021/06/24/Notes-about-EDID/</id>
    <published>2021-06-24T02:58:29.000Z</published>
    <updated>2021-06-24T12:07:39.820Z</updated>
    
    <content type="html"><![CDATA[<p>本文将记录EDID的相关notes。<a id="more"></a></p><h3 id="1-What-is-EDID"><a href="#1-What-is-EDID" class="headerlink" title="1. What is EDID ?"></a>1. What is EDID ?</h3><p>Extended Display Identification Data (EDID) is a metadata format for display devices to describe their capabilities to a video source (e.g Monitor/ TV panels). The data format is defined by a standard published by the Video Electronics Standards Association (VESA).</p><ul><li>Specific to a dispaly</li><li>Stores a list of capabilities for the display</li><li>Includes vendor and product information, display parameters, times, preferences, gamma, colorimetry, audio capabilities, extension blocks</li></ul><p>EDID is implemented for DVI, HDMI, and DisplayPort. Some very cheap monitors still (for cost saving) do not implement EDID standard (in which case VBT entries for such monitors are required).</p><h3 id="2-How-to-dump-EDID-in-Linux"><a href="#2-How-to-dump-EDID-in-Linux" class="headerlink" title="2. How to dump EDID in Linux?"></a>2. How to dump EDID in Linux?</h3><p>Linux i915 graphics driver has capability to do it.</p><h4 id="2-1-To-Locate"><a href="#2-1-To-Locate" class="headerlink" title="2.1 To Locate"></a>2.1 To Locate</h4><p>You need to find for which display connector you want to dump EDID.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ find /sys/devices/pci0000:00/0000:00:02.0 | grep -i edid</span><br><span class="line">/sys/devices/pci0000:00/0000:00:02.0/drm/card0/card0-DP-2/edid</span><br><span class="line">/sys/devices/pci0000:00/0000:00:02.0/drm/card0/card0-DP-1/edid</span><br></pre></td></tr></table></figure><h4 id="2-2-To-Dump"><a href="#2-2-To-Dump" class="headerlink" title="2.2 To Dump"></a>2.2 To Dump</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /sys/devices/pci0000:00/0000:00:02.0/drm/card0/card0-DP-1/edid &gt; edid-dump</span><br></pre></td></tr></table></figure><h3 id="3-Decode-in-human-readable"><a href="#3-Decode-in-human-readable" class="headerlink" title="3. Decode in human readable"></a>3. Decode in human readable</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">$edid-decode &lt; edid-dump</span><br><span class="line">Extracted contents:</span><br><span class="line">header:          00 ff ff ff ff ff ff 00</span><br><span class="line">serial number:   4a 8b 32 bc 01 01 01 01 30 1c</span><br><span class="line">version:         01 03</span><br><span class="line">basic params:    80 00 00 78 3e</span><br><span class="line">chroma info:     ee 91 a3 54 4c 99 26 0f 50 54</span><br><span class="line">established:     21 08 00</span><br><span class="line">standard:        d1 c0 a9 c0 8b c0 81 c0 61 c0 59 c0 4b c0 3b c0</span><br><span class="line">descriptor 1:    02 3a 80 18 71 38 2d 40 58 2c 25 00 58 c3 10 00 00 1e</span><br><span class="line">descriptor 2:    00 00 00 fc 00 52 54 4b 20 46 48 44 20 48 44 52 0a 20</span><br><span class="line">descriptor 3:    00 00 00 ff 00 64 65 6d 6f 73 65 74 2d 31 0a 20 30 20</span><br><span class="line">descriptor 4:    00 00 00 fd 00 32 41 22 54 13 01 0a 20 20 20 20 20 20</span><br><span class="line">extensions:      01</span><br><span class="line">checksum:        26</span><br><span class="line"></span><br><span class="line">Manufacturer: RTK Model bc32 Serial Number 16843009</span><br><span class="line">Made week 48 of 2018</span><br><span class="line">EDID version: 1.3</span><br><span class="line">Digital display</span><br><span class="line">Image size is variable</span><br><span class="line">Gamma: 2.20</span><br><span class="line">DPMS levels: Off</span><br><span class="line">Supported color formats: RGB 4:4:4, YCrCb 4:4:4, YCrCb 4:2:2</span><br><span class="line">Default (sRGB) color space is primary color space</span><br><span class="line">First detailed timing is preferred timing</span><br><span class="line">Established timings supported:</span><br><span class="line">  640x480@60Hz</span><br><span class="line">  800x600@60Hz</span><br><span class="line">  1024x768@60Hz</span><br><span class="line">Standard timings supported:</span><br><span class="line">  1920x1080@60Hz</span><br><span class="line">  1600x900@60Hz</span><br><span class="line">  1360x765@60Hz</span><br><span class="line">  1280x720@60Hz</span><br><span class="line">  1024x576@60Hz</span><br><span class="line">  960x540@60Hz</span><br><span class="line">  848x477@60Hz</span><br><span class="line">  720x405@60Hz</span><br><span class="line">Detailed mode: Clock 148.500 MHz, 344 mm x 195 mm</span><br><span class="line">               1920 2008 2052 2200 hborder 0</span><br><span class="line">               1080 1082 1087 1125 vborder 0</span><br><span class="line">               +hsync +vsync</span><br><span class="line">Monitor name: RTK</span><br><span class="line">Serial number: demoset-1</span><br><span class="line">Monitor ranges (bare limits): 50-65Hz V, 34-84kHz H, max dotclock 190MHz</span><br><span class="line">Has 1 extension blocks</span><br><span class="line">Checksum: 0x26 (valid)</span><br><span class="line"></span><br><span class="line">CEA extension block</span><br><span class="line">Extension version: 3</span><br><span class="line">39 bytes of CEA data</span><br><span class="line">  Video data block</span><br><span class="line">    VIC   3 720x480@60Hz</span><br><span class="line">    VIC  62 1280x720@30Hz</span><br><span class="line">    VIC  19 1280x720@50Hz</span><br><span class="line">    VIC   4 1280x720@60Hz</span><br><span class="line">    VIC  15 1440x480@60Hz</span><br><span class="line">    VIC  34 1920x1080@30Hz</span><br><span class="line">    VIC  31 1920x1080@50Hz</span><br><span class="line">    VIC  16 1920x1080@60Hz</span><br><span class="line">  Extended tag: video capability data block</span><br><span class="line">    YCbCr quantization: Selectable (via AVI YQ) (1)</span><br><span class="line">    RGB quantization: Selectable (via AVI Q) (1)</span><br><span class="line">    PT scan behaviour: Always Overscannned (1)</span><br><span class="line">    IT scan behaviour: Always Overscannned (1)</span><br><span class="line">    CE scan behaviour: Always Overscannned (1)</span><br><span class="line">  Extended tag: Colorimetry data block</span><br><span class="line">    xvYCC601</span><br><span class="line">    xvYCC709</span><br><span class="line">    sYCC601</span><br><span class="line">    AdobeYCC601</span><br><span class="line">    AdobeRGB</span><br><span class="line">    BT2020cYCC</span><br><span class="line">    BT2020YCC</span><br><span class="line">    BT2020RGB</span><br><span class="line">  Audio data block</span><br><span class="line">    Linear PCM, max channels 2</span><br><span class="line">    Supported sample rates (kHz): 192 176.4 96 88.2 48 44.1 32</span><br><span class="line">    Supported sample sizes (bits): 24 20 16</span><br><span class="line">  Speaker allocation data block</span><br><span class="line">    Speaker map: FL/FR</span><br><span class="line">  Vendor-specific data block, OUI 000c03 (HDMI)</span><br><span class="line">    Source physical address 1.0.0.0</span><br><span class="line">    DC_36bit</span><br><span class="line">    DC_30bit</span><br><span class="line">    DC_Y444</span><br><span class="line">    Maximum TMDS clock: 300MHz</span><br><span class="line">  Extended tag: HDR static metadata data block</span><br><span class="line">    Electro optical transfer functions:</span><br><span class="line">      Traditional gamma - SDR luminance range</span><br><span class="line">      Traditional gamma - HDR luminance range</span><br><span class="line">      SMPTE ST2084</span><br><span class="line">    Supported static metadata descriptors:</span><br><span class="line">      Static metadata type 1</span><br><span class="line">    Desired content max luminance: 105</span><br><span class="line">    Desired content max frame-average luminance: 105</span><br><span class="line">    Desired content min luminance: 79</span><br><span class="line">Underscans PC formats by default</span><br><span class="line">Basic audio support</span><br><span class="line">Supports YCbCr 4:4:4</span><br><span class="line">Supports YCbCr 4:2:2</span><br><span class="line">2 native detailed modes</span><br><span class="line">Detailed mode: Clock 108.000 MHz, 344 mm x 195 mm</span><br><span class="line">               1600 1624 1704 1800 hborder 0</span><br><span class="line">                900  901  904 1000 vborder 0</span><br><span class="line">               +hsync +vsync</span><br><span class="line">Detailed mode: Clock 85.500 MHz, 344 mm x 195 mm</span><br><span class="line">               1366 1436 1579 1792 hborder 0</span><br><span class="line">                768  771  774  798 vborder 0</span><br><span class="line">               +hsync +vsync</span><br><span class="line">Detailed mode: Clock 74.250 MHz, 344 mm x 195 mm</span><br><span class="line">               1280 1390 1430 1650 hborder 0</span><br><span class="line">                720  725  730  750 vborder 0</span><br><span class="line">               +hsync +vsync</span><br><span class="line">Checksum: 0x4 (valid)</span><br><span class="line"></span><br><span class="line">EDID block does NOT conform to EDID 1.3!</span><br><span class="line">        Detailed block string not properly terminated</span><br><span class="line">EDID block does not conform at all!</span><br><span class="line">        Detailed blocks filled with garbage</span><br><span class="line">        Range descriptor contains garbage</span><br></pre></td></tr></table></figure><hr><p>参考资料:</p><ol><li><a href="https://glenwing.github.io/docs/VESA-EEDID-A2.pdf" target="_blank" rel="noopener">VESA ENHANCED EXTENDED DISPLAY IDENTIFICATION DATA STANDARD</a></li><li><a href="https://www.extron.com/article/uedid" target="_blank" rel="noopener">Understanding EDID - Extended Display Identification Data</a></li><li><a href="https://www.youtube.com/watch?v=babx06TSc8Y" target="_blank" rel="noopener">What is EDID? (Extended Display Identification Data)</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将记录EDID的相关notes。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Video BIOS Table (VBT)</title>
    <link href="http://liujunming.github.io/2021/06/18/Video-BIOS-Table-VBT/"/>
    <id>http://liujunming.github.io/2021/06/18/Video-BIOS-Table-VBT/</id>
    <published>2021-06-18T01:12:18.000Z</published>
    <updated>2021-06-18T10:48:07.300Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容源于:<br><a href="https://github.com/ZoranStojsavljevic/Video-BIOS-Table-parser-assembler/wiki/Video-BIOS-Table-(VBT)" target="_blank" rel="noopener">https://github.com/ZoranStojsavljevic/Video-BIOS-Table-parser-assembler/wiki/Video-BIOS-Table-(VBT)</a> 并对相关内容做出补充。<br><a id="more"></a></p><h3 id="1-Definition-of-Video-BIOS-Table-VBT"><a href="#1-Definition-of-Video-BIOS-Table-VBT" class="headerlink" title="1. Definition of Video BIOS Table (VBT)"></a>1. Definition of Video BIOS Table (VBT)</h3><p>The Video BIOS Table, or VBT, provides platform and board specific configuration information to the driver that is not discoverable or available through other means. By other means the most used method here is to read EDID table from the attached monitor, over Display Data Channel (DDC) using two pin I2C serial interface.</p><p>The VBT configuration is related to display hardware. The VBT is available via the ACPI OpRegion or, on older systems, in the PCI ROM (Option ROM).</p><p>The VBT consists of a VBT Header, a BIOS Data Block (BDB) Header, and a number of BIOS Data Blocks (BDBs) that contain the actual configuration information (supposed to replace the absence of EDID structure with the older monitors). The VBT Header, and thus the VBT, begins with “$VBT” signature. The VBT Header contains the offset of the BDB Header. The BDB header starts with the “BIOS_DATA_BLOCK” signature. The data blocks are concatenated after the BDB Header (not always in exact order, and certain BDBs might be missing, not implemented for such type of HW platforms). The data blocks have a 1-byte Block ID, 2-byte Block Size, and Block Size bytes of data (Block 53, the MIPI Sequence Block is an exception).</p><p>The GFX driver parses the VBT during load. The relevant information is stored in GFX driver private data for ease of use, and the actual VBT is not read after that.</p><h3 id="2-EDID-Structure"><a href="#2-EDID-Structure" class="headerlink" title="2. EDID Structure"></a>2. EDID Structure</h3><p>To understand better what is Video BIOS Table, reader should read the following document: <a href="http://www.extron.com/company/article.aspx?id=uedid" target="_blank" rel="noopener">Understanding EDID - Extended Display Identification Data</a>.</p><p>Please, do note that EDID is implemented for DVI, HDMI, and DisplayPort (Present Time). Some very cheap monitors still (for cost saving) do not implement EDID standard (in which case VBT entries for such monitors are required).</p><h3 id="3-VBT-OSes-Windows-and-Linux-Support"><a href="#3-VBT-OSes-Windows-and-Linux-Support" class="headerlink" title="3. VBT OSes (Windows and Linux) Support"></a>3. VBT OSes (Windows and Linux) Support</h3><p>As stated previously, VBT means Video BIOS Table. It’s a 100% Intel specific table of configuration options for Intel’s Video BIOS and Intel’s graphics drivers. Since VBT is not related to the concept of a Video BIOS or any standard, it cannot be replaced by something (GOP) that continues standards story.</p><p>There is no detailed public documentation, but as it’s used by the Linux driver, at least the structure and some of the values are publicly “documented” <a href="https://www.kernel.org/doc/html/latest/gpu/i915.html#video-bios-table-vbt" target="_blank" rel="noopener">drm/i915 Intel GFX Driver</a>. Developers of the i915 Linux driver stated that they are not willing to support systems without a VBT. Most features of the i915 driver work without a VBT by chance. But anything board specific, like integrated panels in laptops, will likely not work. Windows won’t even try to get things running without VBT.</p><h3 id="4-VBT-Legacy-BIOS-mode-support"><a href="#4-VBT-Legacy-BIOS-mode-support" class="headerlink" title="4. VBT Legacy BIOS mode support"></a>4. VBT Legacy BIOS mode support</h3><p>As far as legacy BIOS concerned, the context is placed in the x86 Real Mode of operation. VBT is used with the legacy Video BIOS (vBIOS), which is placed as Option ROM at the address 0xC0000 (till maximal address 0xCFFFF), thus maximum size of 64KB.</p><h3 id="5-VBT-UEFI-mode-support"><a href="#5-VBT-UEFI-mode-support" class="headerlink" title="5. VBT UEFI mode support"></a>5. VBT UEFI mode support</h3><p><a href="http://www.uefi.org/sites/default/files/resources/UPFS11_P4_UEFI_GOP_AMD.pdf" target="_blank" rel="noopener">The GOP driver</a> is a replacement for legacy video BIOS and enables the use of UEFI pre-boot firmware without CSM. The GOP driver can be 32-bit, 64-bit, or IA-64 with no binary compatibility. UEFI pre-boot firmware architecture (32-/64-bit) must match the GOP driver architecture (32-/64-bit). The Intel Embedded Graphics Drivers’ GOP driver can either be fast boot (speed optimized and platform specific) or generic (platform agnostic for selective platforms).</p><p>Here is a quick comparison between GOP and video BIOS:</p><ul><li>Video BIOS: 64 KB limit. 16-bit execution. CSM is needed with UEFI system firmware. Performance inferior to GOP CSM. The VBIOS works with both 32- and 64-bit architectures.</li><li>GOP: No 64 KB limit. 32-bit protected mode. No need for CSM. Speed optimized (fast boot). The UEFI pre-boot firmware architecture (32-/64-bit) must match the GOP driver.</li></ul><h3 id="6-VBT-location"><a href="#6-VBT-location" class="headerlink" title="6. VBT  location"></a>6. VBT  location</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexdump -C /sys/kernel/debug/dri/0/i915_vbt</span><br></pre></td></tr></table></figure><p>VBT table is easily locatable. It is located in the <code>/sys</code> directory: <code>/sys/kernel/debug/dri/0/i915_vbt</code>(since kernel version 4.5).</p><p>Please, read the following web page for more information: <a href="https://manpages.debian.org/experimental/intel-gpu-tools/intel_vbt_decode.1.en.html" target="_blank" rel="noopener">intel_vbt_decode</a>.</p><h3 id="7-Intel-GPU-Tools"><a href="#7-Intel-GPU-Tools" class="headerlink" title="7. Intel GPU Tools"></a>7. Intel GPU Tools</h3><p>VBT is also documented by intel-gpu-tools. There’s intel_vbt_decode available, <a href="https://cgit.freedesktop.org/xorg/app/intel-gpu-tools/tree/tools/intel_vbt_decode.c" target="_blank" rel="noopener">intel_vbt_decode.c</a>  will print all tables in human readable form.</p><p>After <a href="https://zoomadmin.com/HowToInstall/UbuntuPackage/intel-gpu-tools" target="_blank" rel="noopener">installation</a>, type<code>man intel_vbt_decode</code> for more detailed information.</p><h3 id="8-Extension"><a href="#8-Extension" class="headerlink" title="8. Extension"></a>8. Extension</h3><p><a href="https://01.org/sites/default/files/documentation/acpi_igd_opregion_spec_0.pdf" target="_blank" rel="noopener">Intel Integrated Graphics Device OpRegion Specification</a></p><p><a href="https://lwn.net/Articles/429319/" target="_blank" rel="noopener">ACPI/Intel: Rework Opregion support</a></p><p>From patch <a href="https://patchwork.kernel.org/project/intel-gfx/patch/20210208170253.29968-1-fred.gao@intel.com/" target="_blank" rel="noopener">vfio/pci: Add support for opregion v2.1+</a>, we can know:</p><ol><li>Before OpRegion v2.0(version 2.0), VBT data is stored in OpRegion mailbox #4,</li><li>For OpRegion v2.0 or v2.1+:<ul><li>When VBT size is less than 6KB, the VBT will be stored on OpRegion Mailbox 4</li><li>when VBT size exceeds 6KB:<ul><li>For OpRegion v2.0, the OpRegion Mailbox 3 RVDA store the absolute address of raw VBT data from OpRegion base</li><li>For OpRegion v2.1+, the OpRegion Mailbox 3 RVDA store the relative address of raw VBT data from OpRegion base</li></ul></li></ul></li></ol><hr><p>参考资料:</p><ol><li><a href="https://en.wikipedia.org/wiki/Video_BIOS" target="_blank" rel="noopener">Video BIOS</a></li><li><a href="https://en.wikipedia.org/wiki/Real_mode" target="_blank" rel="noopener">Real Mode</a></li><li><a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface" target="_blank" rel="noopener">UEFI</a></li><li><a href="https://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface" target="_blank" rel="noopener">ACPI</a></li><li><a href="https://en.wikipedia.org/wiki/Open_Firmware" target="_blank" rel="noopener">Open Firmware</a></li><li><a href="https://en.wikipedia.org/wiki/OpenBIOS" target="_blank" rel="noopener">OpenBIOS</a></li><li><a href="https://en.wikipedia.org/wiki/UEFI_Platform_Initialization" target="_blank" rel="noopener">Platform Initialization Specification</a></li><li><a href="https://en.wikipedia.org/wiki/System_Management_BIOS" target="_blank" rel="noopener">SMBIOS</a></li><li><a href="https://en.wikipedia.org/wiki/System_Management_Mode" target="_blank" rel="noopener">SMM</a></li><li><a href="https://en.wikipedia.org/wiki/Coreboot" target="_blank" rel="noopener">Coreboot</a></li><li><a href="https://en.wikipedia.org/wiki/Category:Graphics_software" target="_blank" rel="noopener">Category:Graphics software</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容源于:&lt;br&gt;&lt;a href=&quot;https://github.com/ZoranStojsavljevic/Video-BIOS-Table-parser-assembler/wiki/Video-BIOS-Table-(VBT)&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ZoranStojsavljevic/Video-BIOS-Table-parser-assembler/wiki/Video-BIOS-Table-(VBT)&lt;/a&gt; 并对相关内容做出补充。&lt;br&gt;
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>CSM booting in UEFI</title>
    <link href="http://liujunming.github.io/2021/06/17/CSM-in-BIOS/"/>
    <id>http://liujunming.github.io/2021/06/17/CSM-in-BIOS/</id>
    <published>2021-06-17T08:05:11.000Z</published>
    <updated>2021-06-17T10:20:35.426Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface#CSM_booting" target="_blank" rel="noopener">CSM or Compatibility Support Module</a> is something that allows booting in legacy BIOS mode on UEFI systems.<br><a id="more"></a></p><p>From Wikipedia:</p><blockquote><p>To ensure backward compatibility, most UEFI firmware implementations on PC-class machines also support booting in legacy BIOS mode from MBR-partitioned disks, through the <em>Compatibility Support Module (CSM)</em> that provides legacy BIOS compatibility. In this scenario, booting is performed in the same way as on legacy BIOS-based systems.</p></blockquote><blockquote><p>The <em>Compatibility Support Module</em> allows legacy operating systems and some legacy <a href="https://en.wikipedia.org/wiki/Option_ROM" target="_blank" rel="noopener">option ROMs</a> that do not support UEFI to still be used.</p></blockquote><hr><p>参考资料:</p><ol><li><a href="https://superuser.com/questions/857117/what-is-csm-option" target="_blank" rel="noopener">What is CSM option</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface#CSM_booting&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSM or Compatibility Support Module&lt;/a&gt; is something that allows booting in legacy BIOS mode on UEFI systems.&lt;br&gt;
    
    </summary>
    
      <category term="Firmware" scheme="http://liujunming.github.io/categories/Firmware/"/>
    
    
      <category term="Firmware" scheme="http://liujunming.github.io/tags/Firmware/"/>
    
  </entry>
  
  <entry>
    <title>DMA Remapping:Memory Type</title>
    <link href="http://liujunming.github.io/2021/06/17/DMA-Remapping-Memory-Type/"/>
    <id>http://liujunming.github.io/2021/06/17/DMA-Remapping-Memory-Type/</id>
    <published>2021-06-17T04:45:20.000Z</published>
    <updated>2021-06-17T10:20:35.426Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录Intel VT-d spec中，“DMA Remapping”一章中“Memory Type”一节的相关笔记<a id="more"></a><br><img src="/images/2021/06/4.PNG" alt><br>devices operating inside  processor coherency domain ，这种devices(比如IGD,Intel processor Graphics Device)可以直接访问CPU L3 cache，对于这种devices，Memory-type才有意义。对于devices operating outside  processor coherency domain，可以忽略Memory-type。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录Intel VT-d spec中，“DMA Remapping”一章中“Memory Type”一节的相关笔记
    
    </summary>
    
      <category term="VT-d" scheme="http://liujunming.github.io/categories/VT-d/"/>
    
    
      <category term="VT-d" scheme="http://liujunming.github.io/tags/VT-d/"/>
    
  </entry>
  
  <entry>
    <title>The motivation of VFIO</title>
    <link href="http://liujunming.github.io/2021/06/16/The-motivation-of-VFIO/"/>
    <id>http://liujunming.github.io/2021/06/16/The-motivation-of-VFIO/</id>
    <published>2021-06-16T12:18:55.000Z</published>
    <updated>2021-06-17T11:22:08.430Z</updated>
    
    <content type="html"><![CDATA[<p>这一年多以来陆陆续续听到了VFIO这个技术，知道它可以用来：(1)虚拟化下pass-thru device；(2)实现用户态驱动，如DPDK，SPDK等。但是，从未深入研究过VFIO。接下来，准备写一系列的博客来介绍这项技术。本文将介绍the motivation of VFIO。<a id="more"></a>本文内容主要源于大佬的slides。</p><h3 id="1-Background"><a href="#1-Background" class="headerlink" title="1. Background"></a>1. Background</h3><blockquote><p>The VFIO driver is an IOMMU/device agnostic framework for exposing direct device access to userspace, in a secure, IOMMU protected environment.  In other words, this allows safe , non-privileged, userspace drivers.</p><p>Why do we want that?  Virtual machines often make use of direct device access (“device assignment”) when configured for the highest possible I/O performance.  From a device and host perspective, this simply turns the VM into a userspace driver, with the benefits of significantly reduced latency, higher bandwidth, and direct use of bare-metal device drivers.</p><p>Some applications, particularly in the high performance computing field, also benefit from low-overhead, direct device access from userspace.  Examples include network adapters (often non-TCP/IP based) and compute accelerators.  Prior to VFIO, these drivers had to either go through the full development cycle to become proper upstream driver, be maintained out of tree, or make use of the UIO framework, which has no notion of IOMMU protection, limited interrupt support, and requires root privileges to access things like PCI configuration space.</p><p>The VFIO driver framework intends to unify these, replacing both the KVM PCI specific device assignment code as well as provide a more secure, more featureful userspace driver environment than UIO.</p></blockquote><p>The use cases of VFIO are straightforward. Both of them need to directly access device:</p><ul><li><p>Virtualization guest OS</p></li><li><p>High performance user-level IO stacks such as DPDK</p></li></ul><p>VFIO claims that it replaced two exsiting things:</p><ul><li>UIO</li><li>KVM Legacy PCI Assignment</li></ul><h3 id="2-VFIO-vs-UIO"><a href="#2-VFIO-vs-UIO" class="headerlink" title="2. VFIO vs UIO"></a>2. VFIO vs UIO</h3><p>UIO, i.e. Userspace I/O.</p><h4 id="2-1-Basic-target-of-UIO-Enable-userspace-device-drivers"><a href="#2-1-Basic-target-of-UIO-Enable-userspace-device-drivers" class="headerlink" title="2.1 Basic target of UIO: Enable userspace device drivers:"></a>2.1 Basic target of UIO: Enable userspace device drivers:</h4><ul><li>Remap device MMIO to userspace</li><li>Remap kernel physical memory to userspace</li><li>Remap kernel virtual memory to userspace</li></ul><h4 id="2-2-What-is-missing"><a href="#2-2-What-is-missing" class="headerlink" title="2.2 What is missing:"></a>2.2 What is missing:</h4><ul><li>IRQ (partial support, polling mostly)</li><li>DMA</li></ul><h4 id="2-3-Why-DMA-capability-not-provided"><a href="#2-3-Why-DMA-capability-not-provided" class="headerlink" title="2.3 Why DMA capability not provided?"></a>2.3 Why DMA capability not provided?</h4><ul><li>IOMMU not considered from the beginning</li></ul><h4 id="2-4-Why-VFIO-is-different"><a href="#2-4-Why-VFIO-is-different" class="headerlink" title="2.4 Why VFIO is different?"></a>2.4 Why VFIO is different?</h4><ul><li>Full DMA capability from userspace</li><li>Full interrupt support to userspace</li></ul><h3 id="3-VFIO-vs-Legacy-PCI-Assignment"><a href="#3-VFIO-vs-Legacy-PCI-Assignment" class="headerlink" title="3. VFIO vs Legacy PCI Assignment"></a>3. VFIO vs Legacy PCI Assignment</h3><h4 id="3-1-Legacy-Assignment-the-Pros"><a href="#3-1-Legacy-Assignment-the-Pros" class="headerlink" title="3.1 Legacy Assignment: the Pros"></a>3.1 Legacy Assignment: the Pros</h4><ul><li>straight forward implementation</li></ul><h4 id="3-2-Legacy-Assignment-the-Cons"><a href="#3-2-Legacy-Assignment-the-Cons" class="headerlink" title="3.2 Legacy Assignment: the Cons"></a>3.2 Legacy Assignment: the Cons</h4><ul><li>the minimum granularity is PCI BDF<ul><li>How about a PCIe-to-PCI Bridge?</li><li>A device capable of Peer-to-Peer, but without ACS capability?</li></ul></li></ul><p><strong>“How about a PCIe-to-PCI Bridge?”的解释:</strong></p><p>设备利用自己的Source Identifier(包含Bus、Device、Func)来找到页表项以完成地址映射，不过如下特殊情况需要考虑:<br>对于由PCIe switch扩展出的PCI桥及桥下设备，在发送DMA请求时，Source Identifier是PCIe switch的，这样的话该PCI桥及桥下所有设备都会使用PCIe switch的Source Identifier去定位Context Entry，找到的页表也是同一个，如果将这个PCI桥下的不同设备分给不同虚机，由于会使用同一份页表，这样会产生问题。针对这种情况，当前PCI桥及桥下的所有设备必须分配给同一个虚机，这就是VFIO中group的概念。</p><p><strong>“A device capable of Peer-to-Peer, but without ACS capability?”的解释:</strong></p><p><a href="/2019/11/24/Introduction-to-PCIe-Access-Control-Services/#2-What-is-ACS">ACS的基本介绍</a></p><blockquote><p>This isolation is not always at the granularity of a single device though.  Even when an IOMMU is capable of this, properties of devices, interconnects, and IOMMU topologies can each reduce this isolation. For instance, an individual device may be part of a larger multi-function enclosure.  While the IOMMU may be able to distinguish between devices within the enclosure, the enclosure may not require transactions between devices to reach the IOMMU.  Examples of this could be anything from a multi-function PCI device with backdoors between functions to a non-PCI-ACS (Access Control Services) capable bridge allowing redirection without reaching the IOMMU. </p></blockquote><p>For VFIO, this isolation granularity is vfio_group instead of a single device.不会存在同一个group内的devices分配给多个虚拟机的情况。</p><h4 id="3-3-Why-VFIO-is-different"><a href="#3-3-Why-VFIO-is-different" class="headerlink" title="3.3 Why VFIO is different?"></a>3.3 Why VFIO is different?</h4><ul><li>the minimum granularity is vfio_group, which is derived from iommu_group</li><li>A PCIe-to-PCI hierarchy belongs to one group</li><li>Devices capable of Peer-to-Peer but without ACS capability, these devices belongs to one group(比如Device1和Device2之间可以Peer-to-Peer，但是没有ACS capability，如果将Device1 pass-thru给虚拟机1，将Device2 pass-thru给虚拟机2，就可能会破坏虚拟机的隔离性。因此需要将Device1和Device2放入同一个vfio_group中)</li></ul><hr><p>参考资料:</p><ol><li><a href="https://gdoc.pub/doc/e/2PACX-1vSsskD0A2XgHoZhaYLAkS7lmCOrfxkGXk1WTovWEAyeoELVdBjrE-NzD8h-NvJfKhxMpUg2aXzaD-XG" target="_blank" rel="noopener">Notes about Virtualization Yizhou Shan</a></li><li><a href="https://www.kernel.org/doc/Documentation/vfio.txt" target="_blank" rel="noopener">Kernel documentation: VFIO</a></li><li><a href="https://blog.csdn.net/hx_op/article/details/104029622" target="_blank" rel="noopener">VFIO概述</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一年多以来陆陆续续听到了VFIO这个技术，知道它可以用来：(1)虚拟化下pass-thru device；(2)实现用户态驱动，如DPDK，SPDK等。但是，从未深入研究过VFIO。接下来，准备写一系列的博客来介绍这项技术。本文将介绍the motivation of VFIO。
    
    </summary>
    
      <category term="VFIO" scheme="http://liujunming.github.io/categories/VFIO/"/>
    
    
      <category term="VFIO" scheme="http://liujunming.github.io/tags/VFIO/"/>
    
  </entry>
  
  <entry>
    <title>常用的英文缩写</title>
    <link href="http://liujunming.github.io/2021/06/09/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%8B%B1%E6%96%87%E7%BC%A9%E5%86%99/"/>
    <id>http://liujunming.github.io/2021/06/09/常用的英文缩写/</id>
    <published>2021-06-09T06:48:46.000Z</published>
    <updated>2021-06-25T09:25:24.518Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录个人在日常生活中遇到的英文缩写。</p><ul><li>AFAIK = As Far As I Know<a id="more"></a></li><li><p>LGTM = looks good to me<br>frequently used when reviewing documents</p></li><li><p>N.B. = Noto Bene<br>Noto Bene latin for “important note” could be could be a bug but it’s important what ever it is.<br><a href="https://forums.codeguru.com/showthread.php?177925-what-NB-stands-for" target="_blank" rel="noopener">what “NB” stands for?</a></p></li><li><p>POC = proof of concept<br>Google keywords: <code>poc stands for in software</code><br>POC is an experiment intended to show that a program, product, or system can be successfully deployed in the real world.<br><a href="https://www.cloudshare.com/virtual-it-labs-glossary/what-is-a-proof-of-concept-poc-environment/" target="_blank" rel="noopener">What Is a Proof-of-Concept (POC) Environment?</a></p></li><li><p>POR = plan of record<br>The plan of record represents the agreed-upon plan for how a feature will behave.<br><a href="https://devblogs.microsoft.com/oldnewthing/20180206-00/?p=97975" target="_blank" rel="noopener">Microspeak: POR</a></p></li><li><p>CoE = center of excellence<br>A center of excellence (CoE) is a team of skilled knowledge workers whose mission is to provide the organization they work for with best practices around a particular area of interest.</p></li><li><p>EOL = End of Line</p></li><li><p>WFH = Work From Home<br>work being done remotely, instead of at an office.<br><a href="https://www.walkme.com/glossary/wfh/" target="_blank" rel="noopener">What is WFH?</a></p></li><li><p>a.k.a = also known as</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录个人在日常生活中遇到的英文缩写。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AFAIK = As Far As I Know
    
    </summary>
    
      <category term="经验" scheme="http://liujunming.github.io/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="经验" scheme="http://liujunming.github.io/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>The introduction to git submodule</title>
    <link href="http://liujunming.github.io/2021/06/09/The-introduction-to-git-submodule/"/>
    <id>http://liujunming.github.io/2021/06/09/The-introduction-to-git-submodule/</id>
    <published>2021-06-09T06:27:17.000Z</published>
    <updated>2021-06-10T11:26:41.234Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录<code>git submodule</code>的相关知识。<a id="more"></a><br>官方spec:</p><ul><li><code>man git-submodule</code></li><li><a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noopener">Git Tools - Submodules</a></li></ul><p>本文内容主要转载自:<a href="https://www.jianshu.com/p/9000cd49822c" target="_blank" rel="noopener">Git submodule 子模块的管理和使用</a></p><h3 id="1-使用前提"><a href="#1-使用前提" class="headerlink" title="1. 使用前提"></a>1. 使用前提</h3><p>经常碰到这种情况：当你在一个Git 项目上工作时，你需要在其中使用另外一个Git 项目。也许它是一个第三方开发的Git 库或者是你独立开发和并在多个父项目中使用的。这个情况下一个常见的问题产生了：你想将两个项目单独处理但是又需要在其中一个中使用另外一个。</p><p>在Git 中你可以用子模块<code>submodule</code>来管理这些项目，<code>submodule</code>允许你将一个Git 仓库当作另外一个Git 仓库的子目录。这允许你克隆另外一个仓库到你的项目中并且保持你的提交相对独立。</p><h3 id="2-添加子模块"><a href="#2-添加子模块" class="headerlink" title="2. 添加子模块"></a>2. 添加子模块</h3><p>此文中统一将远程项目<code>https://github.com/maonx/vimwiki-assets.git</code>克隆到本地<code>assets</code>文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule add https://github.com/maonx/vimwiki-assets.git assets</span><br></pre></td></tr></table></figure><p>添加子模块后运行<code>git status</code>, 可以看到目录有增加1个文件<code>.gitmodules</code>, 这个文件用来保存子模块的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">Initial commit</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   .gitmodules</span><br><span class="line">    new file:   assets</span><br></pre></td></tr></table></figure><h3 id="3-查看子模块"><a href="#3-查看子模块" class="headerlink" title="3. 查看子模块"></a>3. 查看子模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule</span><br><span class="line"> e33f854d3f51f5ebd771a68da05ad0371a3c0570 assets (heads/master)</span><br></pre></td></tr></table></figure><h3 id="4-更新子模块"><a href="#4-更新子模块" class="headerlink" title="4. 更新子模块"></a>4. 更新子模块</h3><p>fetch all the data from that project and check out the appropriate commit listed in your superproject</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br></pre></td></tr></table></figure><p>更新子模块为远程项目的最新版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --remote</span><br></pre></td></tr></table></figure></p><h3 id="5-克隆包含子模块的项目"><a href="#5-克隆包含子模块的项目" class="headerlink" title="5. 克隆包含子模块的项目"></a>5. 克隆包含子模块的项目</h3><p>克隆包含子模块的项目有二种方法：一种是先克隆父项目，再更新子模块；另一种是直接递归克隆整个项目。</p><h4 id="5-1-克隆父项目，再更新子模块"><a href="#5-1-克隆父项目，再更新子模块" class="headerlink" title="5.1 克隆父项目，再更新子模块"></a>5.1 克隆父项目，再更新子模块</h4><p>1.克隆父项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/maonx/vimwiki-assets.git assets</span><br></pre></td></tr></table></figure></p><p>2.查看子模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule</span><br><span class="line"> -e33f854d3f51f5ebd771a68da05ad0371a3c0570 assets</span><br></pre></td></tr></table></figure></p><p>子模块前面有一个<code>-</code>，说明子模块文件还未检入（空文件夹）。</p><p>3.初始化子模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule init</span><br><span class="line">Submodule &apos;assets&apos; (https://github.com/maonx/vimwiki-assets.git) registered for path &apos;assets&apos;</span><br></pre></td></tr></table></figure></p><p>初始化模块只需在克隆父项目后运行一次。</p><p>4.更新子模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule update</span><br><span class="line">Cloning into &apos;assets&apos;...</span><br><span class="line">remote: Counting objects: 151, done.</span><br><span class="line">remote: Compressing objects: 100% (80/80), done.</span><br><span class="line">remote: Total 151 (delta 18), reused 0 (delta 0), pack-reused 70</span><br><span class="line">Receiving objects: 100% (151/151), 1.34 MiB | 569.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (36/36), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Submodule path &apos;assets&apos;: checked out &apos;e33f854d3f51f5ebd771a68da05ad0371a3c0570&apos;</span><br></pre></td></tr></table></figure></p><h4 id="5-2-递归克隆整个项目"><a href="#5-2-递归克隆整个项目" class="headerlink" title="5.2 递归克隆整个项目"></a>5.2 递归克隆整个项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/maonx/vimwiki-assets.git assets --recursive</span><br></pre></td></tr></table></figure><p>递归克隆整个项目，子模块已经同时更新了，一步到位。</p><h3 id="6-删除子模块"><a href="#6-删除子模块" class="headerlink" title="6. 删除子模块"></a>6. 删除子模块</h3><p><a href="https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule/7646931#7646931" target="_blank" rel="noopener">How do I remove a submodule?</a></p><h3 id="7-MISC"><a href="#7-MISC" class="headerlink" title="7. MISC"></a>7. MISC</h3><p>常用操作:</p><p><code>git submodule update --init --recursive</code></p><p>解析:</p><ol><li><code>git submodule init</code> to initialize your local configuration file</li><li><code>git submodule update</code> to fetch all the data from that project and check out the appropriate commit listed in your superproject</li><li><code>--recursive</code>traverse submodules recursively</li></ol><hr><p>参考资料:</p><ol><li><a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noopener">Git Tools - Submodules</a></li><li><a href="https://www.jianshu.com/p/9000cd49822c" target="_blank" rel="noopener">Git submodule 子模块的管理和使用</a></li><li><a href="https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial" target="_blank" rel="noopener">Git Submodule Tutorial</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录&lt;code&gt;git submodule&lt;/code&gt;的相关知识。
    
    </summary>
    
      <category term="工具" scheme="http://liujunming.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>QEMU x86架构的Machine:Q35 vs. I440FX</title>
    <link href="http://liujunming.github.io/2021/06/02/Qemu-X86%E6%9E%B6%E6%9E%84%E7%9A%84Machine-Type/"/>
    <id>http://liujunming.github.io/2021/06/02/Qemu-X86架构的Machine-Type/</id>
    <published>2021-06-02T03:23:06.000Z</published>
    <updated>2021-06-02T13:03:16.216Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容转载自:<a href="https://remimin.github.io/2019/07/09/qemu_machine_type/" target="_blank" rel="noopener">Qemu X86架构的Machine Type</a>。</p><p>QEMU支持的X86架构非常少，在Q35出现之前，就只有诞生于1996年的I440FX/PIIX一个架构。Intel不断推出新的芯片组， 加入了PCIe、AHCI等等。I440FX已经无法满足需求，为此，在 KVM Forum 2012 上，Jason Baron带来了 <a href="https://www.linux-kvm.org/images/0/06/2012-forum-Q35.pdf" target="_blank" rel="noopener">A New Chipset For Qemu - Intel’s Q35</a>。<a id="more"></a></p><h3 id="1-Q35-vs-I440FX"><a href="#1-Q35-vs-I440FX" class="headerlink" title="1. Q35 vs. I440FX"></a>1. Q35 vs. I440FX</h3><p>Q35是Intel在2007年9月推出的芯片组。</p><p>Topology of I440FX/PIIX4 Vs. Q35</p><ul><li>Q35 has IOMMU</li><li>Q35 has PCIe</li><li>Q35 has Super I/O chip with LPC interconnect</li><li>Q35 has 12 USB ports</li><li>Q35 SATA vs. PATA</li></ul><p>IRQ Routing I440FX/PIIX4 Vs. Q35</p><ul><li>Q35 PIRQ has 8 pins - PIRQ A-H</li><li>Q35 has two PIC modes – legacy PIC vs I/O APIC</li><li>Q35 runs in I/O APIC mode</li><li>Slots 0-24 are mapped to PIRQ E-H round robin</li><li>PCIe Bus to PIRQ mappings can be programmed<ul><li>Slots 25-31</li></ul></li><li>Q35 has 8 PCI IRQ vectors available, I440FX/PIIX4 only 2</li></ul><p>I440FX/PIIX4 vs. Q35 devices</p><ul><li>AHCI vs. Legacy IDE</li><li>PCI addresses</li><li>Populate slots using flags</li><li>Default slots</li></ul><h3 id="2-i440fx-PIIX架构"><a href="#2-i440fx-PIIX架构" class="headerlink" title="2. i440fx/PIIX架构"></a>2. i440fx/PIIX架构</h3><p>Intel 440FX是北桥芯片，用于连接主板上的高速设备。向上可以连接多个处理器；向下则主要提供了连接DRAM的接口和连接PCI总线的接口(通过PCI Host Bridge)， 通过该PCI root port扩展出整个PCI设备树，包括PIIX南桥芯片。</p><p>PIIX是南桥芯片，用于连接主板上的低速设备，主要包括IDE控制器、DMA控制器，USB控制器， SMBus总线控制器，X-Bus控制器，USB控制，PIT（Programmable Interval Timer）， RTC（Real Time Clock，实时时钟)， PIC（可编程中断控制器）等，并且提供ISA bridge连接ISA总线，用于连接更多的低速设备。</p><p><img src="/images/2021/06/2.PNG" alt></p><h3 id="3-Q35架构"><a href="#3-Q35架构" class="headerlink" title="3. Q35架构"></a>3. Q35架构</h3><p>北桥为GMCH(Graphics and Memory Controller Hub)，南桥为ICH9(I/O Controller Hub)。CPU 通过前端总线(FSB)连接到GMCH；GMCH连接内存，显卡，高速PCIe接口等；南桥芯片则为USB，低速PCI / SATA 等提供接入。</p><p><img src="/images/2021/06/3.PNG" alt></p><h3 id="4-list-QEMU-supported-machines"><a href="#4-list-QEMU-supported-machines" class="headerlink" title="4. list QEMU supported machines"></a>4. list QEMU supported machines</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">kvm@kvm:~$ qemu-system-x86_64 -machine help</span><br><span class="line">Supported machines are:</span><br><span class="line">pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-4.0)</span><br><span class="line">pc-i440fx-4.0        Standard PC (i440FX + PIIX, 1996) (default)</span><br><span class="line">pc-i440fx-3.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-3.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.9        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.8        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.7        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.6        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.5        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.4        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.3        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.12       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.11       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.10       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-1.3               Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-1.2               Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-1.1               Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-1.0               Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-0.15              Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-0.14              Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-0.13              Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-0.12              Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-4.0.1)</span><br><span class="line">pc-q35-4.0.1         Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.9           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.8           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.7           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.6           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.5           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.4           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.12          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.11          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.10          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">isapc                ISA-only PC</span><br><span class="line">none                 empty machine</span><br></pre></td></tr></table></figure><hr><p>参考资料:</p><ol><li><a href="https://www.linux-kvm.org/images/0/06/2012-forum-Q35.pdf" target="_blank" rel="noopener">A New Chipset For Qemu - Intel’s Q35</a></li><li><a href="https://www.binss.me/blog/qemu-note-of-Q35-machine/" target="_blank" rel="noopener">QEMU学习笔记——Q35</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容转载自:&lt;a href=&quot;https://remimin.github.io/2019/07/09/qemu_machine_type/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Qemu X86架构的Machine Type&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;QEMU支持的X86架构非常少，在Q35出现之前，就只有诞生于1996年的I440FX/PIIX一个架构。Intel不断推出新的芯片组， 加入了PCIe、AHCI等等。I440FX已经无法满足需求，为此，在 KVM Forum 2012 上，Jason Baron带来了 &lt;a href=&quot;https://www.linux-kvm.org/images/0/06/2012-forum-Q35.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A New Chipset For Qemu - Intel’s Q35&lt;/a&gt;。
    
    </summary>
    
      <category term="QEMU" scheme="http://liujunming.github.io/categories/QEMU/"/>
    
    
      <category term="虚拟化" scheme="http://liujunming.github.io/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="QEMU" scheme="http://liujunming.github.io/tags/QEMU/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to netplan</title>
    <link href="http://liujunming.github.io/2021/06/01/Introduction-to-netplan/"/>
    <id>http://liujunming.github.io/2021/06/01/Introduction-to-netplan/</id>
    <published>2021-05-31T22:37:56.000Z</published>
    <updated>2021-06-02T13:03:16.215Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容源于<a href="https://netplan.io/" target="_blank" rel="noopener">netplan</a>，并展示一个作者用到的配置。<a id="more"></a></p><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h3><p>Netplan is a utility for easily configuring networking on a linux system. You simply create a YAML description of the required network interfaces and what each should be configured to do. From this description Netplan will generate all the necessary configuration for your chosen renderer tool.</p><h3 id="2-How-does-it-work"><a href="#2-How-does-it-work" class="headerlink" title="2. How does it work?"></a>2. How does it work?</h3><p><img src="/images/2021/06/1.PNG" alt></p><p>Netplan reads network configuration from <code>/etc/netplan/*.yaml</code> which are written by administrators, installers, cloud image instantiations, or other OS deployments. During early boot, Netplan generates backend specific configuration files in <code>/run</code> to hand off control of devices to a particular networking daemon.</p><p>Netplan currently works with these supported renderers</p><ul><li><a href="https://help.ubuntu.com/community/NetworkManager" target="_blank" rel="noopener">NetworkManager</a></li><li><a href="http://manpages.ubuntu.com/manpages/bionic/man5/systemd.network.5.html" target="_blank" rel="noopener">Systemd-networkd</a></li></ul><h3 id="3-How-do-I-use-it"><a href="#3-How-do-I-use-it" class="headerlink" title="3. How do I use it?"></a>3. How do I use it?</h3><h4 id="3-1-Configuration"><a href="#3-1-Configuration" class="headerlink" title="3.1 Configuration"></a>3.1 Configuration</h4><p>Obviously, without configuration, netplan will not do anything. The most useful configuration snippet (to bring up things via dhcp) is as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: NetworkManager</span><br></pre></td></tr></table></figure><p>This will make NetworkManager manage all devices (and by default, any ethernet device will come up with DHCP once carrier is detected).</p><p>Using networkd as a renderer does not let devices automatically come up using DHCP; each interface needs to be specified in a file in <code>/etc/netplan</code> for its configuration to be written and for it to be used in networkd.</p><h5 id="3-1-1-One-example"><a href="#3-1-1-One-example" class="headerlink" title="3.1.1 One example"></a>3.1.1 One example</h5><p>个人使用的一个配置: <strong>Configuring network bridges</strong><br><a href="https://github.com/liujunming/qemu_usage/tree/master/0002-set-net-on-kvm" target="_blank" rel="noopener">https://github.com/liujunming/qemu_usage/tree/master/0002-set-net-on-kvm</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">   version: 2</span><br><span class="line">   renderer: networkd</span><br><span class="line">   ethernets:</span><br><span class="line">       eno1:</span><br><span class="line">           dhcp4: no</span><br><span class="line">   bridges:</span><br><span class="line">       br0:</span><br><span class="line">           dhcp4: yes</span><br><span class="line">           interfaces: [eno1]</span><br></pre></td></tr></table></figure><p><strong>eno1</strong> should be you network interface name</p><p><a href="https://netplan.io/reference/" target="_blank" rel="noopener">netplan reference</a></p><p>如果想了解更多的配置，请参考<a href="https://netplan.io/examples/" target="_blank" rel="noopener">https://netplan.io/examples/</a> 。</p><h4 id="3-2-Commands"><a href="#3-2-Commands" class="headerlink" title="3.2 Commands"></a>3.2 Commands</h4><p>Netplan uses a set of subcommands to drive its behavior:</p><ul><li><strong>netplan generate</strong>: Use <code>/etc/netplan</code> to generate the required configuration for the renderers.</li><li><strong>netplan apply</strong>: Apply all configuration for the renderers, restarting them as necessary.</li><li><strong>netplan try</strong>: Apply configuration and wait for user confirmation; will roll back if network is broken or no confirmation is given.</li></ul><hr><p>参考资料:</p><ol><li><a href="https://netplan.io/" target="_blank" rel="noopener">https://netplan.io/</a></li><li><a href="https://netplan.io/examples/" target="_blank" rel="noopener">https://netplan.io/examples/</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容源于&lt;a href=&quot;https://netplan.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;netplan&lt;/a&gt;，并展示一个作者用到的配置。
    
    </summary>
    
      <category term="工具" scheme="http://liujunming.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>lspci usage</title>
    <link href="http://liujunming.github.io/2021/05/31/lspci-usage/"/>
    <id>http://liujunming.github.io/2021/05/31/lspci-usage/</id>
    <published>2021-05-31T12:29:50.000Z</published>
    <updated>2021-06-01T14:12:08.829Z</updated>
    
    <content type="html"><![CDATA[<p>本文将简单介绍下PCI ID database和Class Codes相关知识，然后分享<code>lspci</code>的常用操作。<a id="more"></a></p><h3 id="PCI-ID-database"><a href="#PCI-ID-database" class="headerlink" title="PCI ID database"></a>PCI ID database</h3><p><a href="https://pci-ids.ucw.cz/" target="_blank" rel="noopener">https://pci-ids.ucw.cz/</a></p><p>tools: <a href="https://www.pcilookup.com/" target="_blank" rel="noopener">PCI Lookup</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lspci -n -s 00:02.0</span><br><span class="line">00:02.0 0300: 8086:5a85 (rev 0b)</span><br></pre></td></tr></table></figure><p>查询结果<a href="https://www.pcilookup.com/?ven=8086&amp;dev=5a85&amp;action=submit" target="_blank" rel="noopener">HD Graphics 500</a>.</p><h3 id="Class-Codes"><a href="#Class-Codes" class="headerlink" title="Class Codes"></a>Class Codes</h3><p><a href="https://blog.ladsai.com/pci-configuration-space-class-code.html" target="_blank" rel="noopener">https://blog.ladsai.com/pci-configuration-space-class-code.html</a><br>The Class Code, Subclass, and Prog IF registers are used to identify the device’s type, the device’s function, and the device’s register-level programming interface, respectively. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lspci -n -s 00:02.0</span><br><span class="line">00:02.0 0300: 8086:5a85 (rev 0b)</span><br></pre></td></tr></table></figure><p>0300: VGA-Compatible Controller</p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">lspci -n</span><br><span class="line"></span><br><span class="line">lspci -t</span><br><span class="line"></span><br><span class="line">lspci -v</span><br><span class="line"></span><br><span class="line">lspci -s 03:00.0</span><br><span class="line"></span><br><span class="line">lspci -k</span><br><span class="line"></span><br><span class="line">lspci -vxxx -s 0:02.0</span><br><span class="line"></span><br><span class="line">lspci -nxxx -s 0:02.0</span><br><span class="line"></span><br><span class="line">lspci -vmm</span><br><span class="line"></span><br><span class="line">lspci -D</span><br></pre></td></tr></table></figure><p>Each device is given a bus number, a device number and a function number. On Linux, PCI devices are also given domain numbers, but they are usually omitted by lspci since very often all devices have the same domain number (usually zero).</p><p>For more detailed guideline, please type <code>man lspci</code> or <code>info lspci</code>.同时可以参考<a href="https://diego.assencio.com/?index=649b7a71b35fc7ad41e03b6d0e825f07" target="_blank" rel="noopener">Interpreting the output of lspci</a>.</p><hr><p>参考资料:</p><ol><li><a href="https://wiki.osdev.org/PCI" target="_blank" rel="noopener">osdev PCI</a></li><li><a href="https://www.thegeekstuff.com/2014/04/lspci-examples/" target="_blank" rel="noopener">7 Linux lspci Command Examples to Get PCI Bus Hardware Device Info</a></li><li><a href="https://diego.assencio.com/?index=649b7a71b35fc7ad41e03b6d0e825f07" target="_blank" rel="noopener">Interpreting the output of lspci</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将简单介绍下PCI ID database和Class Codes相关知识，然后分享&lt;code&gt;lspci&lt;/code&gt;的常用操作。
    
    </summary>
    
      <category term="PCI&amp;PCIe" scheme="http://liujunming.github.io/categories/PCI-PCIe/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Notes about Kernel parameters</title>
    <link href="http://liujunming.github.io/2021/05/29/Notes-about-Kernel-parameters/"/>
    <id>http://liujunming.github.io/2021/05/29/Notes-about-Kernel-parameters/</id>
    <published>2021-05-28T16:06:13.000Z</published>
    <updated>2021-05-28T17:29:29.035Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录内核参数相关笔记。</p><a id="more"></a><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h3><p>There are three ways to pass options to the kernel and thus control its behavior:</p><ol><li>When building the kernel—in the kernel’s <code>config</code> file. </li><li>When starting the kernel—using command line parameters (usually through a boot loader).</li><li>At runtime—through the files in <code>/proc/sys/</code> and <code>/sys/</code>.</li></ol><p> This page only explains the second method (kernel command line parameters).</p><h3 id="2-Set-kernel-command-line-parameters-in-GRUB"><a href="#2-Set-kernel-command-line-parameters-in-GRUB" class="headerlink" title="2. Set kernel command line parameters in GRUB"></a>2. Set kernel command line parameters in GRUB</h3><p>Kernel parameters can be set either temporarily by editing the boot entry in the boot loader’s boot selection menu, or permanently by modifying the boot loader’s configuration file.</p><p>The following examples add the <code>quiet</code> and <code>splash</code> parameters to GRUB.</p><ul><li><p>Press <code>e</code> when the menu shows up and add them on the <code>linux</code> line:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linux /boot/vmlinuz-linux root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash</span><br></pre></td></tr></table></figure><p>Press <code>Ctrl+x</code> to boot with these parameters.</p></li><li><p>To make the change persistent after reboot, the best practice is to:</p><p>Edit <code>/etc/default/grub</code> and append your kernel options between the quotes in the <code>GRUB_CMDLINE_LINUX_DEFAULT</code> line:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;</span><br></pre></td></tr></table></figure><p>And then automatically re-generate the <code>grub.cfg</code> file with <code>update-grub</code>.</p></li></ul><h3 id="3-Verification"><a href="#3-Verification" class="headerlink" title="3. Verification"></a>3. Verification</h3><p>You can check the parameters your system was booted up with by running <code>cat /proc/cmdline</code> and see if it includes your changes.</p><h3 id="4-Parameter-list"><a href="#4-Parameter-list" class="headerlink" title="4. Parameter list"></a>4. Parameter list</h3><p><a href="https://www.kernel.org/doc/html/latest/admin-guide/kernel-parameters.html" target="_blank" rel="noopener">“The kernel’s command-line parameters” documentation</a></p><p><a href="http://files.kroah.com/lkn/lkn_pdf/ch09.pdf" target="_blank" rel="noopener">List of kernel parameters with further explanation and grouped by similar options</a></p><hr><p>参考资料:</p><ol><li><a href="https://wiki.archlinux.org/title/Kernel_parameters" target="_blank" rel="noopener">Kernel parameters</a></li><li><a href="https://askubuntu.com/questions/716957/what-do-the-nomodeset-quiet-and-splash-kernel-parameters-mean" target="_blank" rel="noopener">What do the nomodeset, quiet and splash kernel parameters mean?</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录内核参数相关笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="Kernel" scheme="http://liujunming.github.io/categories/Kernel/"/>
    
    
      <category term="Kernel" scheme="http://liujunming.github.io/tags/Kernel/"/>
    
  </entry>
  
  <entry>
    <title>Have fun with Unix</title>
    <link href="http://liujunming.github.io/2021/05/23/Have-fun-with-Unix/"/>
    <id>http://liujunming.github.io/2021/05/23/Have-fun-with-Unix/</id>
    <published>2021-05-23T12:29:28.000Z</published>
    <updated>2021-05-23T13:21:40.099Z</updated>
    
    <content type="html"><![CDATA[<p>本文转载自:<a href="https://blog.csdn.net/ce123_zhouwei/article/details/9073869" target="_blank" rel="noopener">国际C语言混乱代码大赛代码赏析(一)</a>。</p><p>近段时间在看《C专家编程》，里面提到国际C语言混乱代码大赛（The International Obfuscated C Code Contest IOCCC）。IOCCC有许多令人捧腹之处，不管你是自己编写还是时候分析获胜者的代码，都能够以令人惊讶的方式扩展你的知识。通常有10种类型的获胜者：“对规则的最奇怪的滥用”，“最具创意的源代码布局”，“最简单的单行代码”等。综合性的“最佳上镜”奖授予最难阅读、行为最为古怪（但能够运行）的C程序的作者。下面我们来欣赏并分析1987年，贝尔实验室的David Korn提交的获奖代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;<span class="built_in">printf</span>(&amp;unix[<span class="string">"\021%six\012\0"</span>], (unix)[<span class="string">"have"</span>] + <span class="string">"fun"</span> - <span class="number">0x60</span>);&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>这段代码打印出什么东西？（提示：和“have fun无关”）。<br><br> 首先看一段代码:<br><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">3</span>[a]); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 在C语言中，其实数组的引用可以3[a]这样的形式的，等价于a[3]。 再看下面一段代码: </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,i=<span class="number">4</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">3</span>[a]); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i[a]); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 这样的表示也是可以的。i[a]实际上相当于a[4]了。 再看下面一段代码: </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,unix); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 为什么我没有定义unix也能打印出来呢？ 原因是unix被编译器定义为一个宏。 相当于#define unix 1 ,这样打印出来1。 下面来解释一下这个问题. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n"</span>,(unix)[<span class="string">"have"</span>]); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 这里的unix相当于1 ，那么unix[“have”]相当于 “have”[1] 我们都知道”have”是个字符数组。那么 “have”[1]就相当于引用这个”have”数组下标为1的字符了，实际上就是a;：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0x%x"</span>,<span class="string">'a'</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  a的ascii码的16进制表示为0x61。(unix)[“have”]+”fun”-0x60就相当于0x61-0x60+”fun”相当于 0x01+”fun” ，相当于字符指针后移并指向”un”了 。这样后面的部分解释完了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="built_in">printf</span>(&amp;unix[<span class="string">"\021ix\012\0"</span>]); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 我们首先把%s去掉。%s实际上是刚刚讲过的”un”的格式。 我们知道unix宏的值 是1，那么</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(&amp;unix[<span class="string">"\021ix\012\0"</span>]);</span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(&amp;<span class="number">1</span>[<span class="string">"\021ix\012\0"</span>]);</span><br></pre></td></tr></table></figure><p>  根据上面我说的 1[“have”]这个形式，同理能得到：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(&amp;<span class="string">"\021ix\012\0"</span>[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure></p><p> 这个形式了。 这个引用和上面的有所区别，区别在于&amp;。那么一个字符数组从它的下标为1 的元素取地址就可以得到一个字符串指针。 还原回去 相当于<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(&amp;<span class="string">"\021%six\012\0"</span>[<span class="number">1</span>],<span class="string">"un"</span>);</span><br></pre></td></tr></table></figure></p><p>  也就是说把第一个元素跳过去了即把\021跳了过去。相当于：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%six\012\0"</span>,<span class="string">"un"</span>)</span><br></pre></td></tr></table></figure></p><p> \012 是ascii码里的回车。这个相当于：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%six\n\0"</span>,<span class="string">"un"</span>);</span><br></pre></td></tr></table></figure></p><p>至此 这个问题解决了…</p><p><strong>Notes:</strong></p><ol><li><p>An octal escape sequence consists of <code>\</code> followed by one, two, or three octal digits. The octal escape sequence ends when it either contains three octal digits already, or the next character is not an octal digit.</p></li><li><p>“a[i] = i[a]= *(a+i)“ 即下标运算符的可交换性。</p></li><li><p><code>unix</code>这个宏是属于gcc提供的 System-specific Predefined Macros，值为1。</p></li><li><p><a href="https://www.geeksforgeeks.org/whats-difference-between-char-s-and-char-s-in-c/" target="_blank" rel="noopener">What’s difference between char s[] and char *s in C?</a></p></li></ol><hr><p>参考资料:</p><ol><li><a href="https://stackoverflow.com/questions/29819239/understanding-output-of-printf-containing-backslash-012" target="_blank" rel="noopener">Understanding output of printf containing backslash (\012)</a></li><li><a href="https://www.geeksforgeeks.org/whats-difference-between-char-s-and-char-s-in-c/" target="_blank" rel="noopener">What’s difference between char s[] and char *s in C?</a></li><li><a href="https://zhuanlan.zhihu.com/p/147528327" target="_blank" rel="noopener">C语言混乱大赛1987年获奖作品</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文转载自:&lt;a href=&quot;https://blog.csdn.net/ce123_zhouwei/article/details/9073869&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;国际C语言混乱代码大赛代码赏析(一)&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;近段时间在看《C专家编程》，里面提到国际C语言混乱代码大赛（The International Obfuscated C Code Contest IOCCC）。IOCCC有许多令人捧腹之处，不管你是自己编写还是时候分析获胜者的代码，都能够以令人惊讶的方式扩展你的知识。通常有10种类型的获胜者：“对规则的最奇怪的滥用”，“最具创意的源代码布局”，“最简单的单行代码”等。综合性的“最佳上镜”奖授予最难阅读、行为最为古怪（但能够运行）的C程序的作者。下面我们来欣赏并分析1987年，贝尔实验室的David Korn提交的获奖代码：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;main() &amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&amp;amp;unix[&lt;span class=&quot;string&quot;&gt;&quot;\021%six\012\0&quot;&lt;/span&gt;], (unix)[&lt;span class=&quot;string&quot;&gt;&quot;have&quot;&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;fun&quot;&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://liujunming.github.io/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C语言" scheme="http://liujunming.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>grub初级用法</title>
    <link href="http://liujunming.github.io/2021/05/22/grub%E5%88%9D%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>http://liujunming.github.io/2021/05/22/grub初级用法/</id>
    <published>2021-05-22T00:41:51.000Z</published>
    <updated>2021-05-23T04:30:17.403Z</updated>
    
    <content type="html"><![CDATA[<p>本文将分享grub初级用法的一些经验与心得。<a id="more"></a></p><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><p>强烈建议阅读<a href="https://opensource.com/article/17/3/introduction-grub2-configuration-linux" target="_blank" rel="noopener">An introduction to GRUB2 configuration for your Linux machine</a>。</p><p>个人notes:</p><ul><li>The <strong>grub.cfg</strong> file is the GRUB configuration file. Try <code>vim /boot/grub/grub.cfg</code> to see your own <strong>grub.cfg</strong>.</li><li>The <strong>grub.cfg</strong> file is generated by the <code>grub-mkconfig</code> program using a set of primary configuration files and the grub default file as a source for user configuration specifications.<ul><li>grub configuration files: the main set of configuration files for <strong>grub.cfg</strong> is located in the <strong>/etc/grub.d</strong> directory.</li><li>grub default file: the <strong>/etc/default/grub</strong></li></ul></li></ul><h3 id="GRUB-configuration-files"><a href="#GRUB-configuration-files" class="headerlink" title="GRUB configuration files"></a>GRUB configuration files</h3><p>The main set of configuration files for <strong>grub.cfg</strong> is located in the <strong>/etc/grub.d</strong> directory. Each of the files in that directory contains GRUB code that is collected into the final grub.cfg file. The numbering scheme used in the names of these configuration files is designed to provide ordering so that the final <strong>grub.cfg</strong> file is assembled into the correct sequence. Each of these files has a comment to denote the beginning and end of the section, and those comments are also part of the final grub.cfg file so that it is possible to see from which file each section is generated. The delimiting comments look like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">### BEGIN /etc/grub.d/10_linux ###</span><br><span class="line"></span><br><span class="line">### END /etc/grub.d/10_linux ###</span><br></pre></td></tr></table></figure><p>These files should not be modified unless you are a GRUB expert and understand what the changes will do. Even then you should always keep a backup copy of the original, working <strong>grub.cfg</strong> file. The specific files, <strong>40_custom</strong> and <strong>41_custom</strong> are intended to be used to generate user modifications to the GRUB configuration. You should still be aware of the consequences of any changes you make to these files and maintain a backup of the original <strong>grub.cfg</strong> file.</p><h3 id="GRUB-defaults-file"><a href="#GRUB-defaults-file" class="headerlink" title="GRUB defaults file"></a>GRUB defaults file</h3><p>The <strong>/etc/default/grub</strong> file is very simple. The grub defaults file has a number of valid key/value pairs listed already. You can simply change the values of existing keys or add other keys that are not already in the file.</p><p> spec:<a href="https://www.gnu.org/software/grub/manual/grub/grub.html#Simple-configuration" target="_blank" rel="noopener">Simple configuration handling</a></p><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><ul><li><p>make the Grub menu visible when booting:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=5</span><br></pre></td></tr></table></figure></li><li><p>set the default menu entry: <code>GRUB_DEFAULT</code></p></li><li><p><code>update-grub</code>:update-grub is a stub for running <code>grub-mkconfig -o /boot/grub/grub.cfg</code> to generate <strong>grub.cfg</strong> file.</p></li><li><p>spec:<a href="https://www.gnu.org/software/grub/manual/grub/grub.html" target="_blank" rel="noopener">GNU GRUB Manual 2.04</a></p></li><li><p>阅读<a href="https://projectacrn.github.io/2.4/getting-started/rt_industry_ubuntu.html" target="_blank" rel="noopener">Getting Started Guide for ACRN Industry Scenario With Ubuntu Service VM</a>，看看实例是如何配置grub的。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将分享grub初级用法的一些经验与心得。
    
    </summary>
    
      <category term="工具" scheme="http://liujunming.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>如何将grub输出到串口</title>
    <link href="http://liujunming.github.io/2021/05/21/%E5%A6%82%E4%BD%95%E5%B0%86grub%E8%BE%93%E5%87%BA%E5%88%B0%E4%B8%B2%E5%8F%A3/"/>
    <id>http://liujunming.github.io/2021/05/21/如何将grub输出到串口/</id>
    <published>2021-05-21T09:55:56.000Z</published>
    <updated>2021-05-21T15:49:21.429Z</updated>
    
    <content type="html"><![CDATA[<p>edit <code>/etc/default/grub</code> and enable serial input and output support:<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_TERMINAL_INPUT=&quot;console serial&quot;</span><br><span class="line">...</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;gfxterm serial&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Next add the <code>GRUB_SERIAL_COMMAND</code> variable and set the options for the serial connection. For COM1 (<code>/dev/ttyS0</code>) with baud rate of 115200 bit/s:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_SERIAL_COMMAND=&quot;serial --unit=0 --speed=115200&quot;</span><br></pre></td></tr></table></figure><p>Then <code>update-grub</code> </p><hr><p>参考资料:</p><ol><li><a href="https://wiki.archlinux.org/title/Working_with_the_serial_console" target="_blank" rel="noopener">Working with the serial console</a></li><li><a href="http://emmoblin.github.io/blog/2013/03/02/grub-output-to-serial/" target="_blank" rel="noopener">Grub重定向到串口</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;edit &lt;code&gt;/etc/default/grub&lt;/code&gt; and enable serial input and output support:
    
    </summary>
    
      <category term="工具" scheme="http://liujunming.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>How to dump OpRegion and analyze its content</title>
    <link href="http://liujunming.github.io/2021/05/20/How-to-dump-OpRegion-and-analyze-its-content/"/>
    <id>http://liujunming.github.io/2021/05/20/How-to-dump-OpRegion-and-analyze-its-content/</id>
    <published>2021-05-20T13:51:18.000Z</published>
    <updated>2021-05-21T15:49:21.428Z</updated>
    
    <content type="html"><![CDATA[<p>本文将介绍dump OpRegion的方法以及OpRegion内容的含义。<a id="more"></a></p><h3 id="1-Background"><a href="#1-Background" class="headerlink" title="1. Background"></a>1. Background</h3><p><a href="/2019/11/23/gpu-display-in-uefi-phase/">gpu display in uefi bios phase</a></p><h3 id="2-How-to-dump-OpRegion"><a href="#2-How-to-dump-OpRegion" class="headerlink" title="2. How to dump OpRegion"></a>2. How to dump OpRegion</h3><p>在i915 driver的debugfs中，<code>hexdump</code>出OpRegion的具体内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@junming:/sys/kernel/debug/dri/0# pwd</span><br><span class="line">/sys/kernel/debug/dri/0</span><br><span class="line">root@junming:/sys/kernel/debug/dri/0# hexdump -C i915_opregion</span><br><span class="line">00000000  49 6e 74 65 6c 47 72 61  70 68 69 63 73 4d 65 6d  |IntelGraphicsMem|</span><br><span class="line">00000010  08 00 00 00 00 00 00 02  00 00 00 00 00 00 00 00  |................|</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>i915 driver中的源码如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">i915_opregion</span><span class="params">(struct seq_file *m, <span class="keyword">void</span> *unused)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">intel_opregion</span> *<span class="title">opregion</span> = &amp;<span class="title">node_to_i915</span>(<span class="title">m</span>-&gt;<span class="title">private</span>)-&gt;<span class="title">opregion</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (opregion-&gt;header)</span><br><span class="line">seq_write(m, opregion-&gt;header, OPREGION_SIZE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-How-to-analyze-OpRegion-content"><a href="#3-How-to-analyze-OpRegion-content" class="headerlink" title="3. How to analyze OpRegion content"></a>3. How to analyze OpRegion content</h3><p>spec: <a href="https://01.org/sites/default/files/documentation/skl_opregion_rev0p5.pdf" target="_blank" rel="noopener">IGD OpRegion/Software SCI/_DSM for Skylake Processors</a></p><p><img src="/images/2021/05/16.PNG" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000000  49 6e 74 65 6c 47 72 61  70 68 69 63 73 4d 65 6d  |IntelGraphicsMem|</span><br></pre></td></tr></table></figure><p>由此可见，解析出来的内容与spec一致。</p><p><img src="/images/2021/05/17.PNG" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000010  08 00 00 00 00 00 00 02  00 00 00 00 00 00 00 00  |................|</span><br></pre></td></tr></table></figure><p>根据spec，从<code>00 00 00 02</code>可知，OpRegion的version是2.0。</p><p>人肉解析OpRegion的内容，OpRegion一般也就看关键几个位置，不用全部解析。</p><hr><p>参考资料：</p><ol><li><a href="https://lists.freedesktop.org/archives/intel-gfx/2015-December/082667.html" target="_blank" rel="noopener">how to use i915 debugfs interface</a></li><li><a href="https://01.org/sites/default/files/documentation/skl_opregion_rev0p5.pdf" target="_blank" rel="noopener">IGD OpRegion/Software SCI/_DSM for Skylake Processors</a></li><li><a href="https://elixir.bootlin.com/linux/v5.12.4/source/drivers/gpu/drm/i915/display" target="_blank" rel="noopener">Linux kernel i915 driver</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将介绍dump OpRegion的方法以及OpRegion内容的含义。
    
    </summary>
    
      <category term="GPU" scheme="http://liujunming.github.io/categories/GPU/"/>
    
    
      <category term="GPU" scheme="http://liujunming.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to minicom</title>
    <link href="http://liujunming.github.io/2021/05/17/Introduction-to-minicom/"/>
    <id>http://liujunming.github.io/2021/05/17/Introduction-to-minicom/</id>
    <published>2021-05-17T12:42:54.000Z</published>
    <updated>2021-05-18T14:20:07.370Z</updated>
    
    <content type="html"><![CDATA[<p>本文将介绍minicom相关知识。<a id="more"></a></p><h3 id="1-What"><a href="#1-What" class="headerlink" title="1. What"></a>1. What</h3><p>Minicom is a text-based modem control and terminal emulator program for Unix-like operating systems.</p><p>Linux下的Minicom可以通过串口控制外部的硬件设备。适于在Linux通过超级终端对嵌入式设备行管理。</p><p>在ACRN hypervisor开发过程中，可以将KBL NUC通过串口连接到ubuntu主机，然后在ubuntu中打开minicom，从而进入到acrn shell中。在acrn shell中，研发人员可以（1）查看hypervisor的log信息；（2）执行<a href="https://projectacrn.github.io/latest/user-guides/acrn-shell.html" target="_blank" rel="noopener">ACRN Shell Commands</a>。</p><h3 id="2-How"><a href="#2-How" class="headerlink" title="2. How"></a>2. How</h3><p>type <code>man minicom</code> for more detailed steps.</p><p><strong>case1:</strong></p><p><code>sudo minicom -D /dev/ttyUSB0</code></p><p><strong>case2:</strong></p><p><code>minicom -s</code>出现配置菜单 -&gt; 选serial port setup，进入串口配置</p><ul><li>输入A配置串口驱动为/dev/ttyUSB0</li><li><p>输入F将 Hardware Flow Control 设 为 NO</p></li><li><p>在配置菜单 选Save setup as dfl保存（一定要记得这一步）</p></li><li><p>选Exit退出</p></li></ul><p><strong>case3:</strong></p><p><code>Ctrl-a</code> + “x”: 退出minicom</p><p><code>Ctrl-a</code> + “z”: 弹出help屏幕</p><p><strong>issue1</strong></p><p>非正常关闭minicom，会在/var/lock下创建几个文件LCK*，这几个文件阻止了minicom的运行，将它们删除后即可恢复。</p><p><strong>issue2</strong></p><p>minicom输入无反应，可以尝试设置hardware flow: <code>minicom -s F hardware no</code></p><h3 id="3-MISC"><a href="#3-MISC" class="headerlink" title="3. MISC"></a>3. MISC</h3><p>在ACRN开发过程中，如果发现ubuntu中的minicom无法进入acrn shell，不妨查看KBL NUC BIOS中是否开启了串口。</p><hr><p>参考资料：</p><ol><li><a href="https://blog.csdn.net/bird67/article/details/2127235" target="_blank" rel="noopener">linux超级终端minicom的使用方法</a></li><li><a href="https://en.wikipedia.org/wiki/Minicom" target="_blank" rel="noopener">wikipedia Minicom</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将介绍minicom相关知识。
    
    </summary>
    
      <category term="工具" scheme="http://liujunming.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://liujunming.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
